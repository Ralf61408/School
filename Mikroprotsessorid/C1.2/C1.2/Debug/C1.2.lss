
C1.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000da4  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ba1  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037e  00000000  00000000  00001b75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00001ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000547  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  000024af  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002587  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
   6:	00 00       	nop
   8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
   a:	00 00       	nop
   c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
   e:	00 00       	nop
  10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
  12:	00 00       	nop
  14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
  16:	00 00       	nop
  18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	43 c0       	rjmp	.+134    	; 0xa8 <__bad_interrupt>
  22:	00 00       	nop
  24:	41 c0       	rjmp	.+130    	; 0xa8 <__bad_interrupt>
  26:	00 00       	nop
  28:	3f c0       	rjmp	.+126    	; 0xa8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3d c0       	rjmp	.+122    	; 0xa8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3b c0       	rjmp	.+118    	; 0xa8 <__bad_interrupt>
  32:	00 00       	nop
  34:	39 c0       	rjmp	.+114    	; 0xa8 <__bad_interrupt>
  36:	00 00       	nop
  38:	37 c0       	rjmp	.+110    	; 0xa8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	35 c0       	rjmp	.+106    	; 0xa8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	33 c0       	rjmp	.+102    	; 0xa8 <__bad_interrupt>
  42:	00 00       	nop
  44:	31 c0       	rjmp	.+98     	; 0xa8 <__bad_interrupt>
  46:	00 00       	nop
  48:	2f c0       	rjmp	.+94     	; 0xa8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2d c0       	rjmp	.+90     	; 0xa8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2b c0       	rjmp	.+86     	; 0xa8 <__bad_interrupt>
  52:	00 00       	nop
  54:	29 c0       	rjmp	.+82     	; 0xa8 <__bad_interrupt>
  56:	00 00       	nop
  58:	27 c0       	rjmp	.+78     	; 0xa8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	25 c0       	rjmp	.+74     	; 0xa8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	23 c0       	rjmp	.+70     	; 0xa8 <__bad_interrupt>
  62:	00 00       	nop
  64:	21 c0       	rjmp	.+66     	; 0xa8 <__bad_interrupt>
  66:	00 00       	nop
  68:	1f c0       	rjmp	.+62     	; 0xa8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1d c0       	rjmp	.+58     	; 0xa8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1b c0       	rjmp	.+54     	; 0xa8 <__bad_interrupt>
  72:	00 00       	nop
  74:	19 c0       	rjmp	.+50     	; 0xa8 <__bad_interrupt>
  76:	00 00       	nop
  78:	17 c0       	rjmp	.+46     	; 0xa8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	15 c0       	rjmp	.+42     	; 0xa8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	13 c0       	rjmp	.+38     	; 0xa8 <__bad_interrupt>
  82:	00 00       	nop
  84:	11 c0       	rjmp	.+34     	; 0xa8 <__bad_interrupt>
  86:	00 00       	nop
  88:	0f c0       	rjmp	.+30     	; 0xa8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	0d c0       	rjmp	.+26     	; 0xa8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	0b c0       	rjmp	.+22     	; 0xa8 <__bad_interrupt>
  92:	00 00       	nop
  94:	09 c0       	rjmp	.+18     	; 0xa8 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	35 d0       	rcall	.+106    	; 0x110 <main>
  a6:	3f c0       	rjmp	.+126    	; 0x126 <_exit>

000000a8 <__bad_interrupt>:
  a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <paus_05s>:
	
	paus();
	
}

void paus_05s() {
  aa:	2f e0       	ldi	r18, 0x0F	; 15
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	06 c0       	rjmp	.+12     	; 0xbc <paus_05s+0x12>
	uint16_t j;
	
	for(i = 15; i != 0; i--)
	{
		for(j = 30000; j!= 0; j--) {
			asm("nop");
  b0:	00 00       	nop
  b2:	01 97       	sbiw	r24, 0x01	; 1
	uint16_t i;
	uint16_t j;
	
	for(i = 15; i != 0; i--)
	{
		for(j = 30000; j!= 0; j--) {
  b4:	e9 f7       	brne	.-6      	; 0xb0 <paus_05s+0x6>
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	31 09       	sbc	r19, r1

void paus_05s() {
	uint16_t i;
	uint16_t j;
	
	for(i = 15; i != 0; i--)
  ba:	19 f0       	breq	.+6      	; 0xc2 <paus_05s+0x18>
	
	paus();
	
}

void paus_05s() {
  bc:	80 e3       	ldi	r24, 0x30	; 48
  be:	95 e7       	ldi	r25, 0x75	; 117
  c0:	f7 cf       	rjmp	.-18     	; 0xb0 <paus_05s+0x6>
  c2:	08 95       	ret

000000c4 <S>:
			asm("nop");
		}
	}
}

void S() { //S
  c4:	cf 93       	push	r28
	PORTA = 0xff;
  c6:	cf ef       	ldi	r28, 0xFF	; 255
  c8:	c2 b9       	out	0x02, r28	; 2
	paus_05s();
  ca:	ef df       	rcall	.-34     	; 0xaa <paus_05s>
	PORTA = 0x00;
	paus_05s();
  cc:	12 b8       	out	0x02, r1	; 2
	
	PORTA = 0xff;
  ce:	ed df       	rcall	.-38     	; 0xaa <paus_05s>
	paus_05s();
  d0:	c2 b9       	out	0x02, r28	; 2
	PORTA = 0x00;
	paus_05s();
  d2:	eb df       	rcall	.-42     	; 0xaa <paus_05s>
	
	PORTA = 0xff;
  d4:	12 b8       	out	0x02, r1	; 2
	paus_05s();
  d6:	e9 df       	rcall	.-46     	; 0xaa <paus_05s>
  d8:	c2 b9       	out	0x02, r28	; 2
	PORTA = 0x00;
  da:	e7 df       	rcall	.-50     	; 0xaa <paus_05s>
	paus_05s();
  dc:	12 b8       	out	0x02, r1	; 2
  de:	e5 df       	rcall	.-54     	; 0xaa <paus_05s>
}
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <O>:

void O() { //o
  e4:	cf 93       	push	r28
	PORTA = 0xff;
  e6:	cf ef       	ldi	r28, 0xFF	; 255
  e8:	c2 b9       	out	0x02, r28	; 2
	paus_05s();
  ea:	df df       	rcall	.-66     	; 0xaa <paus_05s>
	paus_05s();
  ec:	de df       	rcall	.-68     	; 0xaa <paus_05s>
	paus_05s();
  ee:	dd df       	rcall	.-70     	; 0xaa <paus_05s>
	PORTA = 0x00;
	paus_05s();
  f0:	12 b8       	out	0x02, r1	; 2
	
	PORTA = 0xff;
  f2:	db df       	rcall	.-74     	; 0xaa <paus_05s>
	paus_05s();
  f4:	c2 b9       	out	0x02, r28	; 2
	paus_05s();
  f6:	d9 df       	rcall	.-78     	; 0xaa <paus_05s>
	paus_05s();
  f8:	d8 df       	rcall	.-80     	; 0xaa <paus_05s>
	PORTA = 0x00;
	paus_05s();
  fa:	d7 df       	rcall	.-82     	; 0xaa <paus_05s>
  fc:	12 b8       	out	0x02, r1	; 2
	
	PORTA = 0xff;
  fe:	d5 df       	rcall	.-86     	; 0xaa <paus_05s>
	paus_05s();
 100:	c2 b9       	out	0x02, r28	; 2
 102:	d3 df       	rcall	.-90     	; 0xaa <paus_05s>
	paus_05s();
 104:	d2 df       	rcall	.-92     	; 0xaa <paus_05s>
 106:	d1 df       	rcall	.-94     	; 0xaa <paus_05s>
	paus_05s();
 108:	12 b8       	out	0x02, r1	; 2
 10a:	cf df       	rcall	.-98     	; 0xaa <paus_05s>
	PORTA = 0x00;
 10c:	cf 91       	pop	r28
	paus_05s();
 10e:	08 95       	ret

00000110 <main>:
 110:	8f ef       	ldi	r24, 0xFF	; 255
}
 112:	81 b9       	out	0x01, r24	; 1
 114:	d7 df       	rcall	.-82     	; 0xc4 <S>

void paus() {
	paus_05s();
 116:	c9 df       	rcall	.-110    	; 0xaa <paus_05s>
	S();
	
	paus();
	
	//O
	O();
 118:	e5 df       	rcall	.-54     	; 0xe4 <O>
	PORTA = 0x00;
	paus_05s();
}

void paus() {
	paus_05s();
 11a:	c7 df       	rcall	.-114    	; 0xaa <paus_05s>
 11c:	d3 df       	rcall	.-90     	; 0xc4 <S>
	O();
	
	paus();
	
	//S
	S();
 11e:	c5 df       	rcall	.-118    	; 0xaa <paus_05s>
 120:	80 e0       	ldi	r24, 0x00	; 0
	PORTA = 0x00;
	paus_05s();
}

void paus() {
	paus_05s();
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	08 95       	ret

00000126 <_exit>:
	//S
	S();
	
	paus();
	
}
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
