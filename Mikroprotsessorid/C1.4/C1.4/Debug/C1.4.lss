
C1.4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000214  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ec0  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000baf  00000000  00000000  0000117c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000376  00000000  00000000  00001d2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  000020a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053a  00000000  00000000  00002108  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c8  00000000  00000000  00002642  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000270a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  54:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  58:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  5c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  60:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  64:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  68:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  6c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  70:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  74:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  78:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  7c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  80:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  84:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  88:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  8c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  90:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  94:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	0e 94 c7 00 	call	0x18e	; 0x18e <main>
  a8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <_exit>

000000ac <__bad_interrupt>:
  ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <paus_05s>:
	paus_05s(1000);
	
}

void paus_05s(uint16_t ms) {
	for(uint16_t j = 0; j < ms; j++)
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	61 f4       	brne	.+24     	; 0xcc <paus_05s+0x1c>
  b4:	08 95       	ret
	{for(uint16_t i = 0; i < 200; i++) {
			asm volatile("nop");
  b6:	00 00       	nop
			asm volatile("nop");
  b8:	00 00       	nop
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	31 09       	sbc	r19, r1
	
}

void paus_05s(uint16_t ms) {
	for(uint16_t j = 0; j < ms; j++)
	{for(uint16_t i = 0; i < 200; i++) {
  be:	d9 f7       	brne	.-10     	; 0xb6 <paus_05s+0x6>
	paus_05s(1000);
	
}

void paus_05s(uint16_t ms) {
	for(uint16_t j = 0; j < ms; j++)
  c0:	4f 5f       	subi	r20, 0xFF	; 255
  c2:	5f 4f       	sbci	r21, 0xFF	; 255
  c4:	84 17       	cp	r24, r20
  c6:	95 07       	cpc	r25, r21
  c8:	19 f4       	brne	.+6      	; 0xd0 <paus_05s+0x20>
  ca:	08 95       	ret
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	50 e0       	ldi	r21, 0x00	; 0
	S();
	paus_05s(1000);
	
}

void paus_05s(uint16_t ms) {
  d0:	28 ec       	ldi	r18, 0xC8	; 200
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	f0 cf       	rjmp	.-32     	; 0xb6 <paus_05s+0x6>

000000d6 <S>:
			asm volatile("nop");
		}
	}
}

void S(void) { //S
  d6:	cf 93       	push	r28
	PORTA = 0xff;
  d8:	cf ef       	ldi	r28, 0xFF	; 255
  da:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
  dc:	84 ef       	ldi	r24, 0xF4	; 244
  de:	91 e0       	ldi	r25, 0x01	; 1
  e0:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
  e4:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
  e6:	84 ef       	ldi	r24, 0xF4	; 244
  e8:	91 e0       	ldi	r25, 0x01	; 1
  ea:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
	PORTA = 0xff;
  ee:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
  f0:	84 ef       	ldi	r24, 0xF4	; 244
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
  f8:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
  fa:	84 ef       	ldi	r24, 0xF4	; 244
  fc:	91 e0       	ldi	r25, 0x01	; 1
  fe:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
	PORTA = 0xff;
 102:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
 104:	84 ef       	ldi	r24, 0xF4	; 244
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
 10c:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
 10e:	84 ef       	ldi	r24, 0xF4	; 244
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
}
 116:	cf 91       	pop	r28
 118:	08 95       	ret

0000011a <O>:

void O(void) { //o
 11a:	cf 93       	push	r28
	PORTA = 0xff;
 11c:	cf ef       	ldi	r28, 0xFF	; 255
 11e:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
 120:	84 ef       	ldi	r24, 0xF4	; 244
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 128:	84 ef       	ldi	r24, 0xF4	; 244
 12a:	91 e0       	ldi	r25, 0x01	; 1
 12c:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 130:	84 ef       	ldi	r24, 0xF4	; 244
 132:	91 e0       	ldi	r25, 0x01	; 1
 134:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
 138:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
 13a:	84 ef       	ldi	r24, 0xF4	; 244
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
	PORTA = 0xff;
 142:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
 144:	84 ef       	ldi	r24, 0xF4	; 244
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 14c:	84 ef       	ldi	r24, 0xF4	; 244
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 154:	84 ef       	ldi	r24, 0xF4	; 244
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
 15c:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
 15e:	84 ef       	ldi	r24, 0xF4	; 244
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
	PORTA = 0xff;
 166:	c2 b9       	out	0x02, r28	; 2
	paus_05s(500);
 168:	84 ef       	ldi	r24, 0xF4	; 244
 16a:	91 e0       	ldi	r25, 0x01	; 1
 16c:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 170:	84 ef       	ldi	r24, 0xF4	; 244
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	paus_05s(500);
 178:	84 ef       	ldi	r24, 0xF4	; 244
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	PORTA = 0x00;
 180:	12 b8       	out	0x02, r1	; 2
	paus_05s(500);
 182:	84 ef       	ldi	r24, 0xF4	; 244
 184:	91 e0       	ldi	r25, 0x01	; 1
 186:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
}
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <main>:
void S(void);
void O(void);

int main(void)
{
	DDRA = 0xff;
 18e:	8f ef       	ldi	r24, 0xFF	; 255
 190:	81 b9       	out	0x01, r24	; 1
	
	//S
	S();
 192:	0e 94 6b 00 	call	0xd6	; 0xd6 <S>
	paus_05s(1000);
 196:	88 ee       	ldi	r24, 0xE8	; 232
 198:	93 e0       	ldi	r25, 0x03	; 3
 19a:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>

	
	//O
	O();
 19e:	0e 94 8d 00 	call	0x11a	; 0x11a <O>
	paus_05s(2000);
 1a2:	80 ed       	ldi	r24, 0xD0	; 208
 1a4:	97 e0       	ldi	r25, 0x07	; 7
 1a6:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
	
	
	//S
	S();
 1aa:	0e 94 6b 00 	call	0xd6	; 0xd6 <S>
	paus_05s(1000);
 1ae:	88 ee       	ldi	r24, 0xE8	; 232
 1b0:	93 e0       	ldi	r25, 0x03	; 3
 1b2:	0e 94 58 00 	call	0xb0	; 0xb0 <paus_05s>
	
}
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	08 95       	ret

000001bc <_exit>:
 1bc:	f8 94       	cli

000001be <__stop_program>:
 1be:	ff cf       	rjmp	.-2      	; 0x1be <__stop_program>
