
3_Mootoriga_Juhtmepunuja5.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000011b2  00001246  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800152  00800152  00001298  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014a6  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c7a  00000000  00000000  000028b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000093a  00000000  00000000  0000352c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000288  00000000  00000000  00003e68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000795  00000000  00000000  000040f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a59  00000000  00000000  00004885  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  000052de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
       4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
       8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
       c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      44:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__vector_17>
      48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      70:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      74:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      7c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      80:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__vector_32>
      84:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      88:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      8c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      90:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      94:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      98:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      9c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      a0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      a4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      a8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	da e0       	ldi	r29, 0x0A	; 10
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	e2 eb       	ldi	r30, 0xB2	; 178
      c0:	f1 e1       	ldi	r31, 0x11	; 17
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
      c4:	05 90       	lpm	r0, Z+
      c6:	0d 92       	st	X+, r0
      c8:	a2 35       	cpi	r26, 0x52	; 82
      ca:	b1 07       	cpc	r27, r17
      cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
      ce:	21 e0       	ldi	r18, 0x01	; 1
      d0:	a2 e5       	ldi	r26, 0x52	; 82
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
      d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
      d8:	a3 36       	cpi	r26, 0x63	; 99
      da:	b2 07       	cpc	r27, r18
      dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
      de:	0e 94 23 03 	call	0x646	; 0x646 <main>
      e2:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <_exit>

000000e6 <__bad_interrupt>:
      e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <i2c_init>:
	// Optionally enable pull-up resistor if your button setup needs it
	// BUTTON_S2_PORT |= (1 << BUTTON_S2_PIN);
}

void setup_button_s3() {
	BUTTON_S3_DDR &= ~(1 << BUTTON_S3_PIN);  // Set PB0 as input
      ea:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
      ee:	88 e4       	ldi	r24, 0x48	; 72
      f0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
      f4:	08 95       	ret

000000f6 <i2c_start>:
      f6:	ec eb       	ldi	r30, 0xBC	; 188
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	10 82       	st	Z, r1
      fc:	94 ea       	ldi	r25, 0xA4	; 164
      fe:	90 83       	st	Z, r25
     100:	90 81       	ld	r25, Z
     102:	99 23       	and	r25, r25
     104:	ec f7       	brge	.-6      	; 0x100 <i2c_start+0xa>
     106:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     10a:	98 7f       	andi	r25, 0xF8	; 248
     10c:	98 30       	cpi	r25, 0x08	; 8
     10e:	a1 f4       	brne	.+40     	; 0x138 <i2c_start+0x42>
     110:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     114:	84 e8       	ldi	r24, 0x84	; 132
     116:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     11a:	ec eb       	ldi	r30, 0xBC	; 188
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	80 81       	ld	r24, Z
     120:	88 23       	and	r24, r24
     122:	ec f7       	brge	.-6      	; 0x11e <i2c_start+0x28>
     124:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     128:	98 7f       	andi	r25, 0xF8	; 248
     12a:	98 31       	cpi	r25, 0x18	; 24
     12c:	39 f0       	breq	.+14     	; 0x13c <i2c_start+0x46>
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	90 34       	cpi	r25, 0x40	; 64
     132:	29 f4       	brne	.+10     	; 0x13e <i2c_start+0x48>
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	08 95       	ret
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	08 95       	ret
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	08 95       	ret

00000140 <i2c_stop>:
     140:	84 e9       	ldi	r24, 0x94	; 148
     142:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     146:	ec eb       	ldi	r30, 0xBC	; 188
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	84 fd       	sbrc	r24, 4
     14e:	fd cf       	rjmp	.-6      	; 0x14a <i2c_stop+0xa>
     150:	08 95       	ret

00000152 <i2c_write>:
     152:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     156:	84 e8       	ldi	r24, 0x84	; 132
     158:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     15c:	ec eb       	ldi	r30, 0xBC	; 188
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	80 81       	ld	r24, Z
     162:	88 23       	and	r24, r24
     164:	ec f7       	brge	.-6      	; 0x160 <i2c_write+0xe>
     166:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     16a:	98 7f       	andi	r25, 0xF8	; 248
     16c:	81 e0       	ldi	r24, 0x01	; 1
     16e:	98 32       	cpi	r25, 0x28	; 40
     170:	09 f4       	brne	.+2      	; 0x174 <i2c_write+0x22>
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	08 95       	ret

00000176 <lcd_send_cmd>:
     176:	ef 92       	push	r14
     178:	ff 92       	push	r15
     17a:	0f 93       	push	r16
     17c:	1f 93       	push	r17
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	00 d0       	rcall	.+0      	; 0x184 <lcd_send_cmd+0xe>
     184:	00 d0       	rcall	.+0      	; 0x186 <lcd_send_cmd+0x10>
     186:	cd b7       	in	r28, 0x3d	; 61
     188:	de b7       	in	r29, 0x3e	; 62
     18a:	28 2f       	mov	r18, r24
     18c:	20 7f       	andi	r18, 0xF0	; 240
     18e:	30 e1       	ldi	r19, 0x10	; 16
     190:	83 9f       	mul	r24, r19
     192:	c0 01       	movw	r24, r0
     194:	11 24       	eor	r1, r1
     196:	92 2f       	mov	r25, r18
     198:	9c 60       	ori	r25, 0x0C	; 12
     19a:	99 83       	std	Y+1, r25	; 0x01
     19c:	28 60       	ori	r18, 0x08	; 8
     19e:	2a 83       	std	Y+2, r18	; 0x02
     1a0:	98 2f       	mov	r25, r24
     1a2:	9c 60       	ori	r25, 0x0C	; 12
     1a4:	9b 83       	std	Y+3, r25	; 0x03
     1a6:	88 60       	ori	r24, 0x08	; 8
     1a8:	8c 83       	std	Y+4, r24	; 0x04
     1aa:	8e e4       	ldi	r24, 0x4E	; 78
     1ac:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start>
     1b0:	8e 01       	movw	r16, r28
     1b2:	0f 5f       	subi	r16, 0xFF	; 255
     1b4:	1f 4f       	sbci	r17, 0xFF	; 255
     1b6:	7e 01       	movw	r14, r28
     1b8:	85 e0       	ldi	r24, 0x05	; 5
     1ba:	e8 0e       	add	r14, r24
     1bc:	f1 1c       	adc	r15, r1
     1be:	f8 01       	movw	r30, r16
     1c0:	81 91       	ld	r24, Z+
     1c2:	8f 01       	movw	r16, r30
     1c4:	0e 94 a9 00 	call	0x152	; 0x152 <i2c_write>
     1c8:	0e 15       	cp	r16, r14
     1ca:	1f 05       	cpc	r17, r15
     1cc:	c1 f7       	brne	.-16     	; 0x1be <lcd_send_cmd+0x48>
     1ce:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_stop>
     1d2:	0f 90       	pop	r0
     1d4:	0f 90       	pop	r0
     1d6:	0f 90       	pop	r0
     1d8:	0f 90       	pop	r0
     1da:	df 91       	pop	r29
     1dc:	cf 91       	pop	r28
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <lcd_send_data>:
     1e8:	ef 92       	push	r14
     1ea:	ff 92       	push	r15
     1ec:	0f 93       	push	r16
     1ee:	1f 93       	push	r17
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	00 d0       	rcall	.+0      	; 0x1f6 <lcd_send_data+0xe>
     1f6:	00 d0       	rcall	.+0      	; 0x1f8 <lcd_send_data+0x10>
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	28 2f       	mov	r18, r24
     1fe:	20 7f       	andi	r18, 0xF0	; 240
     200:	30 e1       	ldi	r19, 0x10	; 16
     202:	83 9f       	mul	r24, r19
     204:	c0 01       	movw	r24, r0
     206:	11 24       	eor	r1, r1
     208:	92 2f       	mov	r25, r18
     20a:	9d 60       	ori	r25, 0x0D	; 13
     20c:	99 83       	std	Y+1, r25	; 0x01
     20e:	29 60       	ori	r18, 0x09	; 9
     210:	2a 83       	std	Y+2, r18	; 0x02
     212:	98 2f       	mov	r25, r24
     214:	9d 60       	ori	r25, 0x0D	; 13
     216:	9b 83       	std	Y+3, r25	; 0x03
     218:	89 60       	ori	r24, 0x09	; 9
     21a:	8c 83       	std	Y+4, r24	; 0x04
     21c:	8e e4       	ldi	r24, 0x4E	; 78
     21e:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start>
     222:	8e 01       	movw	r16, r28
     224:	0f 5f       	subi	r16, 0xFF	; 255
     226:	1f 4f       	sbci	r17, 0xFF	; 255
     228:	7e 01       	movw	r14, r28
     22a:	85 e0       	ldi	r24, 0x05	; 5
     22c:	e8 0e       	add	r14, r24
     22e:	f1 1c       	adc	r15, r1
     230:	f8 01       	movw	r30, r16
     232:	81 91       	ld	r24, Z+
     234:	8f 01       	movw	r16, r30
     236:	0e 94 a9 00 	call	0x152	; 0x152 <i2c_write>
     23a:	0e 15       	cp	r16, r14
     23c:	1f 05       	cpc	r17, r15
     23e:	c1 f7       	brne	.-16     	; 0x230 <lcd_send_data+0x48>
     240:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_stop>
     244:	0f 90       	pop	r0
     246:	0f 90       	pop	r0
     248:	0f 90       	pop	r0
     24a:	0f 90       	pop	r0
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	ff 90       	pop	r15
     256:	ef 90       	pop	r14
     258:	08 95       	ret

0000025a <lcd_init>:
     25a:	82 e0       	ldi	r24, 0x02	; 2
     25c:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     260:	88 e2       	ldi	r24, 0x28	; 40
     262:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     266:	8c e0       	ldi	r24, 0x0C	; 12
     268:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     26c:	80 e8       	ldi	r24, 0x80	; 128
     26e:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     272:	08 95       	ret

00000274 <lcd_set_cursor>:
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	00 d0       	rcall	.+0      	; 0x27a <lcd_set_cursor+0x6>
     27a:	cd b7       	in	r28, 0x3d	; 61
     27c:	de b7       	in	r29, 0x3e	; 62
     27e:	19 82       	std	Y+1, r1	; 0x01
     280:	20 e4       	ldi	r18, 0x40	; 64
     282:	2a 83       	std	Y+2, r18	; 0x02
     284:	8c 0f       	add	r24, r28
     286:	9d 1f       	adc	r25, r29
     288:	fc 01       	movw	r30, r24
     28a:	81 81       	ldd	r24, Z+1	; 0x01
     28c:	86 0f       	add	r24, r22
     28e:	80 68       	ori	r24, 0x80	; 128
     290:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     294:	0f 90       	pop	r0
     296:	0f 90       	pop	r0
     298:	df 91       	pop	r29
     29a:	cf 91       	pop	r28
     29c:	08 95       	ret

0000029e <lcd_write_text_wrapped>:
     29e:	ef 92       	push	r14
     2a0:	ff 92       	push	r15
     2a2:	0f 93       	push	r16
     2a4:	1f 93       	push	r17
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	7c 01       	movw	r14, r24
     2ac:	60 e0       	ldi	r22, 0x00	; 0
     2ae:	70 e0       	ldi	r23, 0x00	; 0
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_set_cursor>
     2b8:	f7 01       	movw	r30, r14
     2ba:	80 81       	ld	r24, Z
     2bc:	88 23       	and	r24, r24
     2be:	21 f1       	breq	.+72     	; 0x308 <lcd_write_text_wrapped+0x6a>
     2c0:	87 01       	movw	r16, r14
     2c2:	0f 5f       	subi	r16, 0xFF	; 255
     2c4:	1f 4f       	sbci	r17, 0xFF	; 255
     2c6:	c0 e0       	ldi	r28, 0x00	; 0
     2c8:	d0 e0       	ldi	r29, 0x00	; 0
     2ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_send_data>
     2ce:	21 96       	adiw	r28, 0x01	; 1
     2d0:	f8 01       	movw	r30, r16
     2d2:	81 91       	ld	r24, Z+
     2d4:	8f 01       	movw	r16, r30
     2d6:	88 23       	and	r24, r24
     2d8:	b9 f0       	breq	.+46     	; 0x308 <lcd_write_text_wrapped+0x6a>
     2da:	c0 31       	cpi	r28, 0x10	; 16
     2dc:	d1 05       	cpc	r29, r1
     2de:	a9 f7       	brne	.-22     	; 0x2ca <lcd_write_text_wrapped+0x2c>
     2e0:	06 c0       	rjmp	.+12     	; 0x2ee <lcd_write_text_wrapped+0x50>
     2e2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_send_data>
     2e6:	89 91       	ld	r24, Y+
     2e8:	81 11       	cpse	r24, r1
     2ea:	fb cf       	rjmp	.-10     	; 0x2e2 <lcd_write_text_wrapped+0x44>
     2ec:	0d c0       	rjmp	.+26     	; 0x308 <lcd_write_text_wrapped+0x6a>
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	70 e0       	ldi	r23, 0x00	; 0
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_set_cursor>
     2fa:	f7 01       	movw	r30, r14
     2fc:	80 89       	ldd	r24, Z+16	; 0x10
     2fe:	88 23       	and	r24, r24
     300:	19 f0       	breq	.+6      	; 0x308 <lcd_write_text_wrapped+0x6a>
     302:	e7 01       	movw	r28, r14
     304:	61 96       	adiw	r28, 0x11	; 17
     306:	ed cf       	rjmp	.-38     	; 0x2e2 <lcd_write_text_wrapped+0x44>
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	1f 91       	pop	r17
     30e:	0f 91       	pop	r16
     310:	ff 90       	pop	r15
     312:	ef 90       	pop	r14
     314:	08 95       	ret

00000316 <update_lcd_diameter>:
     316:	0f 93       	push	r16
     318:	1f 93       	push	r17
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	a8 97       	sbiw	r28, 0x28	; 40
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	f8 94       	cli
     328:	de bf       	out	0x3e, r29	; 62
     32a:	0f be       	out	0x3f, r0	; 63
     32c:	cd bf       	out	0x3d, r28	; 61
     32e:	20 e0       	ldi	r18, 0x00	; 0
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	40 e2       	ldi	r20, 0x20	; 32
     334:	51 e4       	ldi	r21, 0x41	; 65
     336:	0e 94 34 05 	call	0xa68	; 0xa68 <__mulsf3>
     33a:	0e 94 a8 04 	call	0x950	; 0x950 <__fixsfsi>
     33e:	cb 01       	movw	r24, r22
     340:	6a e0       	ldi	r22, 0x0A	; 10
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__divmodhi4>
     348:	9f 93       	push	r25
     34a:	8f 93       	push	r24
     34c:	7f 93       	push	r23
     34e:	6f 93       	push	r22
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	8e 01       	movw	r16, r28
     35a:	0f 5f       	subi	r16, 0xFF	; 255
     35c:	1f 4f       	sbci	r17, 0xFF	; 255
     35e:	1f 93       	push	r17
     360:	0f 93       	push	r16
     362:	0e 94 ed 05 	call	0xbda	; 0xbda <sprintf>
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     36c:	c8 01       	movw	r24, r16
     36e:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_write_text_wrapped>
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	f8 94       	cli
     376:	de bf       	out	0x3e, r29	; 62
     378:	0f be       	out	0x3f, r0	; 63
     37a:	cd bf       	out	0x3d, r28	; 61
     37c:	a8 96       	adiw	r28, 0x28	; 40
     37e:	0f b6       	in	r0, 0x3f	; 63
     380:	f8 94       	cli
     382:	de bf       	out	0x3e, r29	; 62
     384:	0f be       	out	0x3f, r0	; 63
     386:	cd bf       	out	0x3d, r28	; 61
     388:	df 91       	pop	r29
     38a:	cf 91       	pop	r28
     38c:	1f 91       	pop	r17
     38e:	0f 91       	pop	r16
     390:	08 95       	ret

00000392 <update_lcd_countdown>:
     392:	cf 93       	push	r28
     394:	df 93       	push	r29
     396:	cd b7       	in	r28, 0x3d	; 61
     398:	de b7       	in	r29, 0x3e	; 62
     39a:	a8 97       	sbiw	r28, 0x28	; 40
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	f8 94       	cli
     3a0:	de bf       	out	0x3e, r29	; 62
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	cd bf       	out	0x3d, r28	; 61
     3a6:	8a 30       	cpi	r24, 0x0A	; 10
     3a8:	91 05       	cpc	r25, r1
     3aa:	9c f4       	brge	.+38     	; 0x3d2 <update_lcd_countdown+0x40>
     3ac:	9f 93       	push	r25
     3ae:	8f 93       	push	r24
     3b0:	87 e1       	ldi	r24, 0x17	; 23
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	9f 93       	push	r25
     3b6:	8f 93       	push	r24
     3b8:	ce 01       	movw	r24, r28
     3ba:	01 96       	adiw	r24, 0x01	; 1
     3bc:	9f 93       	push	r25
     3be:	8f 93       	push	r24
     3c0:	0e 94 ed 05 	call	0xbda	; 0xbda <sprintf>
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
     3d0:	12 c0       	rjmp	.+36     	; 0x3f6 <update_lcd_countdown+0x64>
     3d2:	9f 93       	push	r25
     3d4:	8f 93       	push	r24
     3d6:	87 e1       	ldi	r24, 0x17	; 23
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	9f 93       	push	r25
     3dc:	8f 93       	push	r24
     3de:	ce 01       	movw	r24, r28
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	9f 93       	push	r25
     3e4:	8f 93       	push	r24
     3e6:	0e 94 ed 05 	call	0xbda	; 0xbda <sprintf>
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	0f 90       	pop	r0
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     3fc:	ce 01       	movw	r24, r28
     3fe:	01 96       	adiw	r24, 0x01	; 1
     400:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_write_text_wrapped>
     404:	a8 96       	adiw	r28, 0x28	; 40
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	08 95       	ret

00000416 <update_lcd_length>:
     416:	0f 93       	push	r16
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	cd b7       	in	r28, 0x3d	; 61
     420:	de b7       	in	r29, 0x3e	; 62
     422:	a8 97       	sbiw	r28, 0x28	; 40
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	85 e2       	ldi	r24, 0x25	; 37
     434:	91 e0       	ldi	r25, 0x01	; 1
     436:	9f 93       	push	r25
     438:	8f 93       	push	r24
     43a:	8e 01       	movw	r16, r28
     43c:	0f 5f       	subi	r16, 0xFF	; 255
     43e:	1f 4f       	sbci	r17, 0xFF	; 255
     440:	1f 93       	push	r17
     442:	0f 93       	push	r16
     444:	0e 94 ed 05 	call	0xbda	; 0xbda <sprintf>
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     44e:	c8 01       	movw	r24, r16
     450:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_write_text_wrapped>
     454:	0f 90       	pop	r0
     456:	0f 90       	pop	r0
     458:	0f 90       	pop	r0
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
     45e:	0f 90       	pop	r0
     460:	a8 96       	adiw	r28, 0x28	; 40
     462:	0f b6       	in	r0, 0x3f	; 63
     464:	f8 94       	cli
     466:	de bf       	out	0x3e, r29	; 62
     468:	0f be       	out	0x3f, r0	; 63
     46a:	cd bf       	out	0x3d, r28	; 61
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	1f 91       	pop	r17
     472:	0f 91       	pop	r16
     474:	08 95       	ret

00000476 <update_lcd_ready_to_start>:
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_send_cmd>
     47c:	87 e3       	ldi	r24, 0x37	; 55
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_write_text_wrapped>
     484:	08 95       	ret

00000486 <setup_button_s2>:
     486:	87 98       	cbi	0x10, 7	; 16
     488:	08 95       	ret

0000048a <setup_button_s4>:
	// Optionally enable pull-up resistor if your button setup needs it
	// BUTTON_S3_PORT |= (1 << BUTTON_S3_PIN);
}

void setup_button_s4() {
	BUTTON_S4_DDR &= ~(1 << BUTTON_S4_PIN);  // Set PD5 as input
     48a:	55 98       	cbi	0x0a, 5	; 10
     48c:	08 95       	ret

0000048e <setup_motor_pins>:


void setup_motor_pins() {
	//Mootor1 omad
	// Set STEP pin (PE6) as output
	DDRE |= (1 << STEP_PIN1);
     48e:	6e 9a       	sbi	0x0d, 6	; 13
	// Initialize STEP pin to low
	PORTE &= ~(1 << STEP_PIN1);
     490:	76 98       	cbi	0x0e, 6	; 14

	// Set DIR pin (PC7) as output
	DDRC |= (1 << DIR_PIN1);
     492:	3f 9a       	sbi	0x07, 7	; 7
	// Initialize DIR pin to low
	PORTC &= ~(1 << DIR_PIN1);
     494:	47 98       	cbi	0x08, 7	; 8

	// Set the additional motor control pin (PIND7) as output
	DDRD |= (1 << MOTOR_CONTROL_ADDITIONAL_PIN1);
     496:	57 9a       	sbi	0x0a, 7	; 10
	// Initialize the additional motor control pin to low
	PORTD &= ~(1 << MOTOR_CONTROL_ADDITIONAL_PIN1);
     498:	5f 98       	cbi	0x0b, 7	; 11
	
	//Mootor2 omad
	MOTOR_CONTROL_DDR |= (1 << STEP_PIN2) | (1 << DIR_PIN2);  // Set STEP and DIR pins as output
     49a:	8a b1       	in	r24, 0x0a	; 10
     49c:	80 65       	ori	r24, 0x50	; 80
     49e:	8a b9       	out	0x0a, r24	; 10
	MOTOR_CONTROL_PORT &= ~((1 << STEP_PIN2) | (1 << DIR_PIN2));  // Initialize pins to low
     4a0:	8b b1       	in	r24, 0x0b	; 11
     4a2:	8f 7a       	andi	r24, 0xAF	; 175
     4a4:	8b b9       	out	0x0b, r24	; 11
	
	//Mootor3 omad
	// Set STEP and DIR pins as output for Motor3
	MOTOR_CONTROL_DDR3 |= (1 << STEP_PIN3) | (1 << DIR_PIN3);
     4a6:	84 b1       	in	r24, 0x04	; 4
     4a8:	80 6c       	ori	r24, 0xC0	; 192
     4aa:	84 b9       	out	0x04, r24	; 4
	/// Set the DIR pin high to reverse the motor direction
	MOTOR_CONTROL_PORT3 |= (1 << DIR_PIN3);
     4ac:	2e 9a       	sbi	0x05, 6	; 5
	// Initialize STEP pin to low
	MOTOR_CONTROL_PORT3 &= ~(1 << STEP_PIN3);
     4ae:	2f 98       	cbi	0x05, 7	; 5
	// Set the additional motor control pin for Motor3 as output
	DDRB |= (1 << MOTOR_CONTROL_ADDITIONAL_PIN3);
     4b0:	24 9a       	sbi	0x04, 4	; 4
	// Initialize the additional motor control pin to low
	PORTB &= ~(1 << MOTOR_CONTROL_ADDITIONAL_PIN3);
     4b2:	2c 98       	cbi	0x05, 4	; 5
     4b4:	08 95       	ret

000004b6 <setup_timer1>:
volatile uint16_t TimetoReach = 0;
volatile uint16_t StartTime = 0;
volatile bool StopTime = false;

void setup_timer1() {
	TCCR1A = 0; // Set Timer1 to CTC mode
     4b6:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = 0;
     4ba:	e1 e8       	ldi	r30, 0x81	; 129
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	10 82       	st	Z, r1
	//TCCR1B = (1 << WGM12) | (1 << CS11); // CTC mode, prescaler 8
	TCCR1B |= (1 << WGM12) | (1 << CS11) | (1 << CS10);
     4c0:	80 81       	ld	r24, Z
     4c2:	8b 60       	ori	r24, 0x0B	; 11
     4c4:	80 83       	st	Z, r24
	TCNT1 = 0;
     4c6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     4ca:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	OCR1A = 40; // Compare value for base stepping rate, adjust as needed
     4ce:	88 e2       	ldi	r24, 0x28	; 40
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     4d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	sei();
     4da:	78 94       	sei
     4dc:	08 95       	ret

000004de <__vector_17>:
}

ISR(TIMER1_COMPA_vect) {
     4de:	1f 92       	push	r1
     4e0:	0f 92       	push	r0
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	0f 92       	push	r0
     4e6:	11 24       	eor	r1, r1
     4e8:	2f 93       	push	r18
     4ea:	3f 93       	push	r19
     4ec:	8f 93       	push	r24
     4ee:	9f 93       	push	r25
	PORTF ^= (1 << PINF4); // debug red LED
     4f0:	91 b3       	in	r25, 0x11	; 17
     4f2:	80 e1       	ldi	r24, 0x10	; 16
     4f4:	89 27       	eor	r24, r25
     4f6:	81 bb       	out	0x11, r24	; 17
	interval1++;
     4f8:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <interval1>
     4fc:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <interval1+0x1>
     500:	01 96       	adiw	r24, 0x01	; 1
     502:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <interval1+0x1>
     506:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <interval1>
	interval2++;
     50a:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <interval2>
     50e:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <interval2+0x1>
     512:	01 96       	adiw	r24, 0x01	; 1
     514:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <interval2+0x1>
     518:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <interval2>
	interval3++;
     51c:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <interval3>
     520:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <interval3+0x1>
     524:	01 96       	adiw	r24, 0x01	; 1
     526:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <interval3+0x1>
     52a:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <interval3>
	if (motor1Counter <= interval1){
     52e:	20 91 5b 01 	lds	r18, 0x015B	; 0x80015b <motor1Counter>
     532:	30 91 5c 01 	lds	r19, 0x015C	; 0x80015c <motor1Counter+0x1>
     536:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <interval1>
     53a:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <interval1+0x1>
     53e:	82 17       	cp	r24, r18
     540:	93 07       	cpc	r25, r19
     542:	40 f0       	brcs	.+16     	; 0x554 <__vector_17+0x76>
	PORTE ^= (1 << STEP_PIN1); // Toggle step pin for Motor 1
     544:	9e b1       	in	r25, 0x0e	; 14
     546:	80 e4       	ldi	r24, 0x40	; 64
     548:	89 27       	eor	r24, r25
     54a:	8e b9       	out	0x0e, r24	; 14
	interval1 = 0;
     54c:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <interval1+0x1>
     550:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <interval1>
	}
	if (motor2Counter <= interval2){
     554:	20 91 59 01 	lds	r18, 0x0159	; 0x800159 <motor2Counter>
     558:	30 91 5a 01 	lds	r19, 0x015A	; 0x80015a <motor2Counter+0x1>
     55c:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <interval2>
     560:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <interval2+0x1>
     564:	82 17       	cp	r24, r18
     566:	93 07       	cpc	r25, r19
     568:	40 f0       	brcs	.+16     	; 0x57a <__vector_17+0x9c>
	MOTOR_CONTROL_PORT ^= (1 << STEP_PIN2); // Toggle step pin for Motor 2
     56a:	9b b1       	in	r25, 0x0b	; 11
     56c:	80 e4       	ldi	r24, 0x40	; 64
     56e:	89 27       	eor	r24, r25
     570:	8b b9       	out	0x0b, r24	; 11
	interval2 = 0;
     572:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <interval2+0x1>
     576:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <interval2>
	}
	if (motor3Counter <= interval3){
     57a:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <motor3Counter>
     57e:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <motor3Counter+0x1>
     582:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <interval3>
     586:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <interval3+0x1>
     58a:	82 17       	cp	r24, r18
     58c:	93 07       	cpc	r25, r19
     58e:	38 f0       	brcs	.+14     	; 0x59e <__vector_17+0xc0>
	MOTOR_CONTROL_PORT3 ^= (1 << STEP_PIN3); // Toggle step pin for Motor 3
     590:	85 b1       	in	r24, 0x05	; 5
     592:	80 58       	subi	r24, 0x80	; 128
     594:	85 b9       	out	0x05, r24	; 5
	interval3 = 0;
     596:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <interval3+0x1>
     59a:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <interval3>
	}
}
     59e:	9f 91       	pop	r25
     5a0:	8f 91       	pop	r24
     5a2:	3f 91       	pop	r19
     5a4:	2f 91       	pop	r18
     5a6:	0f 90       	pop	r0
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	0f 90       	pop	r0
     5ac:	1f 90       	pop	r1
     5ae:	18 95       	reti

000005b0 <setup_timer3>:

void setup_timer3() {
	TCCR3A = 0; // Ensure Control Register A is set to zero
     5b0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__DATA_REGION_ORIGIN__+0x30>
	TCCR3B = 0; // Reset Control Register B
     5b4:	e1 e9       	ldi	r30, 0x91	; 145
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	10 82       	st	Z, r1
	
	// Configure Timer3 for CTC mode with a prescaler
	// Example: Set CTC mode (WGM32 = 1) and prescaler (CS31 and CS30 for prescaler 64)
	TCCR3B |= (1 << WGM32) | (1 << CS31) | (1 << CS30);
     5ba:	80 81       	ld	r24, Z
     5bc:	8b 60       	ori	r24, 0x0B	; 11
     5be:	80 83       	st	Z, r24
	
	// Initialize Timer3 counter to zero
	TCNT3 = 0;
     5c0:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__DATA_REGION_ORIGIN__+0x35>
     5c4:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__DATA_REGION_ORIGIN__+0x34>
	
	// Set the Output Compare Register 3A (OCR3A)
	// This value determines the timer's top value and, consequently, its frequency
	OCR3A = 28200; // Example for a 1s interval at 16MHz clock with prescaler 64
     5c8:	88 e2       	ldi	r24, 0x28	; 40
     5ca:	9e e6       	ldi	r25, 0x6E	; 110
     5cc:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__DATA_REGION_ORIGIN__+0x39>
     5d0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__DATA_REGION_ORIGIN__+0x38>
     5d4:	08 95       	ret

000005d6 <__vector_32>:
	//28235 APROX SEKUND
	// Enable Timer3 Compare A Match interrupt
}

ISR(TIMER3_COMPA_vect) {
     5d6:	1f 92       	push	r1
     5d8:	0f 92       	push	r0
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	0f 92       	push	r0
     5de:	11 24       	eor	r1, r1
     5e0:	8f 93       	push	r24
     5e2:	9f 93       	push	r25
	// Toggle an LED or perform another task
	// Example: Toggle a pin on PORTC
	//PORTC ^= (1 << PC7); // Assuming you have an LED connected to PC7
 // Enable Timer1 Compare A Match interrupt
	Countdown -= 1;
     5e4:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <Countdown>
     5e8:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <Countdown+0x1>
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	90 93 56 01 	sts	0x0156, r25	; 0x800156 <Countdown+0x1>
     5f2:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <Countdown>
}
     5f6:	9f 91       	pop	r25
     5f8:	8f 91       	pop	r24
     5fa:	0f 90       	pop	r0
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	0f 90       	pop	r0
     600:	1f 90       	pop	r1
     602:	18 95       	reti

00000604 <start_motors>:


void start_motors(uint16_t speed1, uint16_t speed2, uint16_t speed3) {
	// Set target steps and speed for each motor
	motor1Counter = (100-speed1);
     604:	24 e6       	ldi	r18, 0x64	; 100
     606:	30 e0       	ldi	r19, 0x00	; 0
     608:	f9 01       	movw	r30, r18
     60a:	e8 1b       	sub	r30, r24
     60c:	f9 0b       	sbc	r31, r25
     60e:	f0 93 5c 01 	sts	0x015C, r31	; 0x80015c <motor1Counter+0x1>
     612:	e0 93 5b 01 	sts	0x015B, r30	; 0x80015b <motor1Counter>
	motor2Counter = (100-speed2);
     616:	c9 01       	movw	r24, r18
     618:	86 1b       	sub	r24, r22
     61a:	97 0b       	sbc	r25, r23
     61c:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <motor2Counter+0x1>
     620:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <motor2Counter>
	motor3Counter = (100-speed3);
     624:	24 1b       	sub	r18, r20
     626:	35 0b       	sbc	r19, r21
     628:	30 93 58 01 	sts	0x0158, r19	; 0x800158 <motor3Counter+0x1>
     62c:	20 93 57 01 	sts	0x0157, r18	; 0x800157 <motor3Counter>

	// Activate additional control pins if necessary, for example, enable drivers
	// Motor 1
	MOTOR_CONTROL_PORT |= (1 << MOTOR_CONTROL_ADDITIONAL_PIN1);  // Activate additional control pin for the first motor
     630:	5f 9a       	sbi	0x0b, 7	; 11

	// Motor 2
	// Adjust PORTx and MOTOR_CONTROL_ADDITIONAL_PIN2 to match your setup
	PORTD |= (1 << MOTOR_CONTROL_ADDITIONAL_PIN2);  // Activate additional control pin for the second motor
     632:	5a 9a       	sbi	0x0b, 2	; 11

	// Motor 3
	// Adjust PORTy and MOTOR_CONTROL_ADDITIONAL_PIN3 to match your setup
	PORTB |= (1 << MOTOR_CONTROL_ADDITIONAL_PIN3);  // Activate additional control pin for the third motor
     634:	2c 9a       	sbi	0x05, 4	; 5
     636:	08 95       	ret

00000638 <disable_JTAG>:

}

void disable_JTAG(void) {
	MCUCR |= (1 << JTD);
     638:	85 b7       	in	r24, 0x35	; 53
     63a:	80 68       	ori	r24, 0x80	; 128
     63c:	85 bf       	out	0x35, r24	; 53
	MCUCR |= (1 << JTD);
     63e:	85 b7       	in	r24, 0x35	; 53
     640:	80 68       	ori	r24, 0x80	; 128
     642:	85 bf       	out	0x35, r24	; 53
     644:	08 95       	ret

00000646 <main>:
}

int main(void) {
	disable_JTAG();  // Disable JTAG interface
     646:	0e 94 1c 03 	call	0x638	; 0x638 <disable_JTAG>
	i2c_init();  // Initialize I2C
     64a:	0e 94 75 00 	call	0xea	; 0xea <i2c_init>
	lcd_init();  // Initialize LCD
     64e:	0e 94 2d 01 	call	0x25a	; 0x25a <lcd_init>
	setup_button_s2(); // Initialize button S2
     652:	0e 94 43 02 	call	0x486	; 0x486 <setup_button_s2>
	setup_button_s4();  // Initialize button S4
     656:	0e 94 45 02 	call	0x48a	; 0x48a <setup_button_s4>
	setup_motor_pins();  // Initialize motor control pins
     65a:	0e 94 47 02 	call	0x48e	; 0x48e <setup_motor_pins>
	setup_timer1(); // For motors
     65e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <setup_timer1>
	setup_timer3(); // For time
     662:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <setup_timer3>

	float wireDiameter = 0.1f;  // Starting diameter
	int wireLength = 10;  // Starting length in cm

	update_lcd_diameter(wireDiameter);  // Initial LCD update
     666:	6d ec       	ldi	r22, 0xCD	; 205
     668:	7c ec       	ldi	r23, 0xCC	; 204
     66a:	8c ec       	ldi	r24, 0xCC	; 204
     66c:	9d e3       	ldi	r25, 0x3D	; 61
     66e:	0e 94 8b 01 	call	0x316	; 0x316 <update_lcd_diameter>
	uint8_t CurrentState = STATE_SELECTING_DIAMETER;
	
	// Set PF4 as an output
	DDRF |= (1 << PF4);
     672:	84 9a       	sbi	0x10, 4	; 16

	float wireDiameter = 0.1f;  // Starting diameter
	int wireLength = 10;  // Starting length in cm

	update_lcd_diameter(wireDiameter);  // Initial LCD update
	uint8_t CurrentState = STATE_SELECTING_DIAMETER;
     674:	10 e0       	ldi	r17, 0x00	; 0
	setup_motor_pins();  // Initialize motor control pins
	setup_timer1(); // For motors
	setup_timer3(); // For time

	float wireDiameter = 0.1f;  // Starting diameter
	int wireLength = 10;  // Starting length in cm
     676:	0f 2e       	mov	r0, r31
     678:	fa e0       	ldi	r31, 0x0A	; 10
     67a:	cf 2e       	mov	r12, r31
     67c:	d1 2c       	mov	r13, r1
     67e:	f0 2d       	mov	r31, r0
	setup_button_s4();  // Initialize button S4
	setup_motor_pins();  // Initialize motor control pins
	setup_timer1(); // For motors
	setup_timer3(); // For time

	float wireDiameter = 0.1f;  // Starting diameter
     680:	0f 2e       	mov	r0, r31
     682:	fd ec       	ldi	r31, 0xCD	; 205
     684:	4f 2e       	mov	r4, r31
     686:	fc ec       	ldi	r31, 0xCC	; 204
     688:	5f 2e       	mov	r5, r31
     68a:	65 2c       	mov	r6, r5
     68c:	fd e3       	ldi	r31, 0x3D	; 61
     68e:	7f 2e       	mov	r7, r31
     690:	f0 2d       	mov	r31, r0
		}

		if (BUTTON_S2_PRESSED) {
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
				CurrentState = STATE_SELECTING_LENGTH;  // Move to selecting length
     692:	99 24       	eor	r9, r9
     694:	93 94       	inc	r9
				update_lcd_length(wireLength);
			}
			// No action for STATE_READY_TO_START when S4 is pressed
		}

		if (BUTTON_S2_PRESSED) {
     696:	e1 2c       	mov	r14, r1
				} else if (CurrentState == STATE_READY_TO_START) {
				// Start motor operation with selected diameter and length
				//operate_motor_with(wireDiameter, wireLength);
				//_delay_ms(58000); / 30sek
				//TimetoReach = 20;
				Countdown = 5;
     698:	0f 2e       	mov	r0, r31
     69a:	f5 e0       	ldi	r31, 0x05	; 5
     69c:	af 2e       	mov	r10, r31
     69e:	b1 2c       	mov	r11, r1
     6a0:	f0 2d       	mov	r31, r0
				StartTime = 0;
				start_motors(100, 50, 0); // Example call
				TIMSK3 = (1 << OCIE3A);
     6a2:	68 94       	set
     6a4:	88 24       	eor	r8, r8
     6a6:	81 f8       	bld	r8, 1
				TIMSK1 = (1 << OCIE1A);
     6a8:	cf e6       	ldi	r28, 0x6F	; 111
     6aa:	d0 e0       	ldi	r29, 0x00	; 0
				sei();
				// Optionally, reset to initial state after operation
				//CurrentState = STATE_SELECTING_DIAMETER;
				wireDiameter = 0.1f;  // Reset diameter
				wireLength = 10;  // Reset length
				CurrentState = STATE_RUNNING;
     6ac:	0f 2e       	mov	r0, r31
     6ae:	f3 e0       	ldi	r31, 0x03	; 3
     6b0:	3f 2e       	mov	r3, r31
     6b2:	f0 2d       	mov	r31, r0
				}	
				if (Countdown <= 0) {
					CurrentState = STATE_SELECTING_DIAMETER;
					TIMSK3 = (0 << OCIE3A);
					TIMSK1 = (0 << OCIE1A);
					StopTime = true;
     6b4:	f9 2c       	mov	r15, r9
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6b6:	83 ed       	ldi	r24, 0xD3	; 211
     6b8:	90 e3       	ldi	r25, 0x30	; 48
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <main+0x74>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <main+0x7a>
     6c0:	00 00       	nop


	while (1) {
		//update_lcd_diameter(wireDiameter);  // Initial LCD update
		_delay_ms(50); // Debouncing delay
		if (CurrentState == STATE_RUNNING){
     6c2:	13 30       	cpi	r17, 0x03	; 3
     6c4:	79 f5       	brne	.+94     	; 0x724 <main+0xde>
     6c6:	21 c0       	rjmp	.+66     	; 0x70a <main+0xc4>
			uint16_t Countersmol = 0;
			//CurrentState = STATE_SELECTING_DIAMETER;
			while (StopTime == false) {
				if (Countersmol > 100) {
     6c8:	85 36       	cpi	r24, 0x65	; 101
     6ca:	91 05       	cpc	r25, r1
     6cc:	48 f0       	brcs	.+18     	; 0x6e0 <main+0x9a>
					update_lcd_countdown(Countdown);
     6ce:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <Countdown>
     6d2:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <Countdown+0x1>
     6d6:	0e 94 c9 01 	call	0x392	; 0x392 <update_lcd_countdown>
					Countersmol = 0;
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	07 c0       	rjmp	.+14     	; 0x6ee <main+0xa8>
     6e0:	ed ee       	ldi	r30, 0xED	; 237
     6e2:	f2 e0       	ldi	r31, 0x02	; 2
     6e4:	31 97       	sbiw	r30, 0x01	; 1
     6e6:	f1 f7       	brne	.-4      	; 0x6e4 <main+0x9e>
     6e8:	00 c0       	rjmp	.+0      	; 0x6ea <main+0xa4>
     6ea:	00 00       	nop
				} else {
					_delay_ms(3);
					Countersmol++;;
     6ec:	01 96       	adiw	r24, 0x01	; 1
				}	
				if (Countdown <= 0) {
     6ee:	20 91 55 01 	lds	r18, 0x0155	; 0x800155 <Countdown>
     6f2:	30 91 56 01 	lds	r19, 0x0156	; 0x800156 <Countdown+0x1>
     6f6:	12 16       	cp	r1, r18
     6f8:	13 06       	cpc	r1, r19
     6fa:	4c f0       	brlt	.+18     	; 0x70e <main+0xc8>
					CurrentState = STATE_SELECTING_DIAMETER;
					TIMSK3 = (0 << OCIE3A);
     6fc:	e1 e7       	ldi	r30, 0x71	; 113
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	10 82       	st	Z, r1
					TIMSK1 = (0 << OCIE1A);
     702:	18 82       	st	Y, r1
					StopTime = true;
     704:	f0 92 52 01 	sts	0x0152, r15	; 0x800152 <__data_end>
     708:	02 c0       	rjmp	.+4      	; 0x70e <main+0xc8>
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
		//update_lcd_diameter(wireDiameter);  // Initial LCD update
		_delay_ms(50); // Debouncing delay
		if (CurrentState == STATE_RUNNING){
			uint16_t Countersmol = 0;
			//CurrentState = STATE_SELECTING_DIAMETER;
			while (StopTime == false) {
     70e:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <__data_end>
     712:	22 23       	and	r18, r18
     714:	c9 f2       	breq	.-78     	; 0x6c8 <main+0x82>
					TIMSK1 = (0 << OCIE1A);
					StopTime = true;
				}
			}
			CurrentState = STATE_SELECTING_DIAMETER;
			update_lcd_diameter(wireDiameter);  // Initial LCD update
     716:	c3 01       	movw	r24, r6
     718:	b2 01       	movw	r22, r4
     71a:	0e 94 8b 01 	call	0x316	; 0x316 <update_lcd_diameter>
		}
		if (BUTTON_S4_PRESSED) {
     71e:	4d 99       	sbic	0x09, 5	; 9
     720:	a6 c0       	rjmp	.+332    	; 0x86e <main+0x228>
     722:	7f c0       	rjmp	.+254    	; 0x822 <main+0x1dc>
     724:	4d 99       	sbic	0x09, 5	; 9
     726:	40 c0       	rjmp	.+128    	; 0x7a8 <main+0x162>
     728:	8f e4       	ldi	r24, 0x4F	; 79
     72a:	93 ec       	ldi	r25, 0xC3	; 195
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	f1 f7       	brne	.-4      	; 0x72c <main+0xe6>
     730:	00 c0       	rjmp	.+0      	; 0x732 <main+0xec>
     732:	00 00       	nop
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
     734:	11 11       	cpse	r17, r1
     736:	23 c0       	rjmp	.+70     	; 0x77e <main+0x138>
				wireDiameter += 0.1f;
     738:	2d ec       	ldi	r18, 0xCD	; 205
     73a:	3c ec       	ldi	r19, 0xCC	; 204
     73c:	4c ec       	ldi	r20, 0xCC	; 204
     73e:	5d e3       	ldi	r21, 0x3D	; 61
     740:	c3 01       	movw	r24, r6
     742:	b2 01       	movw	r22, r4
     744:	0e 94 3c 04 	call	0x878	; 0x878 <__addsf3>
     748:	2b 01       	movw	r4, r22
     74a:	3c 01       	movw	r6, r24
				if (wireDiameter > 2.5f) wireDiameter = 0.1f;  // Wrap around
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	40 e2       	ldi	r20, 0x20	; 32
     752:	50 e4       	ldi	r21, 0x40	; 64
     754:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__gesf2>
     758:	18 16       	cp	r1, r24
     75a:	4c f4       	brge	.+18     	; 0x76e <main+0x128>
     75c:	0f 2e       	mov	r0, r31
     75e:	fd ec       	ldi	r31, 0xCD	; 205
     760:	4f 2e       	mov	r4, r31
     762:	fc ec       	ldi	r31, 0xCC	; 204
     764:	5f 2e       	mov	r5, r31
     766:	65 2c       	mov	r6, r5
     768:	fd e3       	ldi	r31, 0x3D	; 61
     76a:	7f 2e       	mov	r7, r31
     76c:	f0 2d       	mov	r31, r0
				update_lcd_diameter(wireDiameter);
     76e:	c3 01       	movw	r24, r6
     770:	b2 01       	movw	r22, r4
     772:	0e 94 8b 01 	call	0x316	; 0x316 <update_lcd_diameter>
				update_lcd_length(wireLength);
			}
			// No action for STATE_READY_TO_START when S4 is pressed
		}

		if (BUTTON_S2_PRESSED) {
     776:	7f 9b       	sbis	0x0f, 7	; 15
     778:	65 c0       	rjmp	.+202    	; 0x844 <main+0x1fe>
     77a:	1e 2d       	mov	r17, r14
     77c:	9c cf       	rjmp	.-200    	; 0x6b6 <main+0x70>
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
				wireDiameter += 0.1f;
				if (wireDiameter > 2.5f) wireDiameter = 0.1f;  // Wrap around
				update_lcd_diameter(wireDiameter);
				} else if (CurrentState == STATE_SELECTING_LENGTH) {
     77e:	11 30       	cpi	r17, 0x01	; 1
     780:	09 f0       	breq	.+2      	; 0x784 <main+0x13e>
     782:	5d c0       	rjmp	.+186    	; 0x83e <main+0x1f8>
				wireLength += 10;
     784:	9a e0       	ldi	r25, 0x0A	; 10
     786:	c9 0e       	add	r12, r25
     788:	d1 1c       	adc	r13, r1
				if (wireLength > 200) wireLength = 10;  // Wrap around
     78a:	e9 ec       	ldi	r30, 0xC9	; 201
     78c:	ce 16       	cp	r12, r30
     78e:	d1 04       	cpc	r13, r1
     790:	2c f0       	brlt	.+10     	; 0x79c <main+0x156>
     792:	0f 2e       	mov	r0, r31
     794:	fa e0       	ldi	r31, 0x0A	; 10
     796:	cf 2e       	mov	r12, r31
     798:	d1 2c       	mov	r13, r1
     79a:	f0 2d       	mov	r31, r0
				update_lcd_length(wireLength);
     79c:	c6 01       	movw	r24, r12
     79e:	0e 94 0b 02 	call	0x416	; 0x416 <update_lcd_length>
			}
			// No action for STATE_READY_TO_START when S4 is pressed
		}

		if (BUTTON_S2_PRESSED) {
     7a2:	7f 9b       	sbis	0x0f, 7	; 15
     7a4:	56 c0       	rjmp	.+172    	; 0x852 <main+0x20c>
     7a6:	87 cf       	rjmp	.-242    	; 0x6b6 <main+0x70>
     7a8:	7f 99       	sbic	0x0f, 7	; 15
     7aa:	85 cf       	rjmp	.-246    	; 0x6b6 <main+0x70>
     7ac:	8f e4       	ldi	r24, 0x4F	; 79
     7ae:	93 ec       	ldi	r25, 0xC3	; 195
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <main+0x16a>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <main+0x170>
     7b6:	00 00       	nop
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
     7b8:	11 11       	cpse	r17, r1
     7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <main+0x180>
				CurrentState = STATE_SELECTING_LENGTH;  // Move to selecting length
				update_lcd_length(wireLength);
     7bc:	c6 01       	movw	r24, r12
     7be:	0e 94 0b 02 	call	0x416	; 0x416 <update_lcd_length>
		}

		if (BUTTON_S2_PRESSED) {
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
				CurrentState = STATE_SELECTING_LENGTH;  // Move to selecting length
     7c2:	19 2d       	mov	r17, r9
     7c4:	78 cf       	rjmp	.-272    	; 0x6b6 <main+0x70>
				update_lcd_length(wireLength);
				} else if (CurrentState == STATE_SELECTING_LENGTH) {
     7c6:	11 30       	cpi	r17, 0x01	; 1
     7c8:	21 f4       	brne	.+8      	; 0x7d2 <main+0x18c>
				CurrentState = STATE_READY_TO_START;  // Ready to start
				update_lcd_ready_to_start();
     7ca:	0e 94 3b 02 	call	0x476	; 0x476 <update_lcd_ready_to_start>
			_delay_ms(200); // Delay for button debounce
			if (CurrentState == STATE_SELECTING_DIAMETER) {
				CurrentState = STATE_SELECTING_LENGTH;  // Move to selecting length
				update_lcd_length(wireLength);
				} else if (CurrentState == STATE_SELECTING_LENGTH) {
				CurrentState = STATE_READY_TO_START;  // Ready to start
     7ce:	18 2d       	mov	r17, r8
     7d0:	72 cf       	rjmp	.-284    	; 0x6b6 <main+0x70>
				update_lcd_ready_to_start();
				} else if (CurrentState == STATE_READY_TO_START) {
     7d2:	12 30       	cpi	r17, 0x02	; 2
     7d4:	09 f0       	breq	.+2      	; 0x7d8 <main+0x192>
     7d6:	6f cf       	rjmp	.-290    	; 0x6b6 <main+0x70>
				// Start motor operation with selected diameter and length
				//operate_motor_with(wireDiameter, wireLength);
				//_delay_ms(58000); / 30sek
				//TimetoReach = 20;
				Countdown = 5;
     7d8:	b0 92 56 01 	sts	0x0156, r11	; 0x800156 <Countdown+0x1>
     7dc:	a0 92 55 01 	sts	0x0155, r10	; 0x800155 <Countdown>
				StartTime = 0;
     7e0:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <StartTime+0x1>
     7e4:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <StartTime>
				start_motors(100, 50, 0); // Example call
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	62 e3       	ldi	r22, 0x32	; 50
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	84 e6       	ldi	r24, 0x64	; 100
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	0e 94 02 03 	call	0x604	; 0x604 <start_motors>
				TIMSK3 = (1 << OCIE3A);
     7f8:	e1 e7       	ldi	r30, 0x71	; 113
     7fa:	f0 e0       	ldi	r31, 0x00	; 0
     7fc:	80 82       	st	Z, r8
				TIMSK1 = (1 << OCIE1A);
     7fe:	88 82       	st	Y, r8
				sei();
     800:	78 94       	sei
				// Optionally, reset to initial state after operation
				//CurrentState = STATE_SELECTING_DIAMETER;
				wireDiameter = 0.1f;  // Reset diameter
				wireLength = 10;  // Reset length
				CurrentState = STATE_RUNNING;
     802:	13 2d       	mov	r17, r3
				TIMSK1 = (1 << OCIE1A);
				sei();
				// Optionally, reset to initial state after operation
				//CurrentState = STATE_SELECTING_DIAMETER;
				wireDiameter = 0.1f;  // Reset diameter
				wireLength = 10;  // Reset length
     804:	0f 2e       	mov	r0, r31
     806:	fa e0       	ldi	r31, 0x0A	; 10
     808:	cf 2e       	mov	r12, r31
     80a:	d1 2c       	mov	r13, r1
     80c:	f0 2d       	mov	r31, r0
				TIMSK3 = (1 << OCIE3A);
				TIMSK1 = (1 << OCIE1A);
				sei();
				// Optionally, reset to initial state after operation
				//CurrentState = STATE_SELECTING_DIAMETER;
				wireDiameter = 0.1f;  // Reset diameter
     80e:	0f 2e       	mov	r0, r31
     810:	fd ec       	ldi	r31, 0xCD	; 205
     812:	4f 2e       	mov	r4, r31
     814:	fc ec       	ldi	r31, 0xCC	; 204
     816:	5f 2e       	mov	r5, r31
     818:	65 2c       	mov	r6, r5
     81a:	fd e3       	ldi	r31, 0x3D	; 61
     81c:	7f 2e       	mov	r7, r31
     81e:	f0 2d       	mov	r31, r0
     820:	4a cf       	rjmp	.-364    	; 0x6b6 <main+0x70>
     822:	8f e4       	ldi	r24, 0x4F	; 79
     824:	93 ec       	ldi	r25, 0xC3	; 195
     826:	01 97       	sbiw	r24, 0x01	; 1
     828:	f1 f7       	brne	.-4      	; 0x826 <main+0x1e0>
     82a:	00 c0       	rjmp	.+0      	; 0x82c <main+0x1e6>
     82c:	00 00       	nop
     82e:	84 cf       	rjmp	.-248    	; 0x738 <main+0xf2>
     830:	ef e4       	ldi	r30, 0x4F	; 79
     832:	f3 ec       	ldi	r31, 0xC3	; 195
     834:	31 97       	sbiw	r30, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <main+0x1ee>
     838:	00 c0       	rjmp	.+0      	; 0x83a <main+0x1f4>
     83a:	00 00       	nop
     83c:	ca cf       	rjmp	.-108    	; 0x7d2 <main+0x18c>
				update_lcd_length(wireLength);
			}
			// No action for STATE_READY_TO_START when S4 is pressed
		}

		if (BUTTON_S2_PRESSED) {
     83e:	7f 9b       	sbis	0x0f, 7	; 15
     840:	f7 cf       	rjmp	.-18     	; 0x830 <main+0x1ea>
     842:	39 cf       	rjmp	.-398    	; 0x6b6 <main+0x70>
     844:	8f e4       	ldi	r24, 0x4F	; 79
     846:	93 ec       	ldi	r25, 0xC3	; 195
     848:	01 97       	sbiw	r24, 0x01	; 1
     84a:	f1 f7       	brne	.-4      	; 0x848 <main+0x202>
     84c:	00 c0       	rjmp	.+0      	; 0x84e <main+0x208>
     84e:	00 00       	nop
     850:	b5 cf       	rjmp	.-150    	; 0x7bc <main+0x176>
     852:	ef e4       	ldi	r30, 0x4F	; 79
     854:	f3 ec       	ldi	r31, 0xC3	; 195
     856:	31 97       	sbiw	r30, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <main+0x210>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <main+0x216>
     85c:	00 00       	nop
     85e:	b5 cf       	rjmp	.-150    	; 0x7ca <main+0x184>
     860:	8f e4       	ldi	r24, 0x4F	; 79
     862:	93 ec       	ldi	r25, 0xC3	; 195
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <main+0x21e>
     868:	00 c0       	rjmp	.+0      	; 0x86a <main+0x224>
     86a:	00 00       	nop
     86c:	a7 cf       	rjmp	.-178    	; 0x7bc <main+0x176>
     86e:	7f 9b       	sbis	0x0f, 7	; 15
     870:	f7 cf       	rjmp	.-18     	; 0x860 <main+0x21a>
					TIMSK3 = (0 << OCIE3A);
					TIMSK1 = (0 << OCIE1A);
					StopTime = true;
				}
			}
			CurrentState = STATE_SELECTING_DIAMETER;
     872:	1e 2d       	mov	r17, r14
     874:	20 cf       	rjmp	.-448    	; 0x6b6 <main+0x70>

00000876 <__subsf3>:
     876:	50 58       	subi	r21, 0x80	; 128

00000878 <__addsf3>:
     878:	bb 27       	eor	r27, r27
     87a:	aa 27       	eor	r26, r26
     87c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3x>
     880:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__fp_round>
     884:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__fp_pscA>
     888:	38 f0       	brcs	.+14     	; 0x898 <__addsf3+0x20>
     88a:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__fp_pscB>
     88e:	20 f0       	brcs	.+8      	; 0x898 <__addsf3+0x20>
     890:	39 f4       	brne	.+14     	; 0x8a0 <__addsf3+0x28>
     892:	9f 3f       	cpi	r25, 0xFF	; 255
     894:	19 f4       	brne	.+6      	; 0x89c <__addsf3+0x24>
     896:	26 f4       	brtc	.+8      	; 0x8a0 <__addsf3+0x28>
     898:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_nan>
     89c:	0e f4       	brtc	.+2      	; 0x8a0 <__addsf3+0x28>
     89e:	e0 95       	com	r30
     8a0:	e7 fb       	bst	r30, 7
     8a2:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__fp_inf>

000008a6 <__addsf3x>:
     8a6:	e9 2f       	mov	r30, r25
     8a8:	0e 94 06 05 	call	0xa0c	; 0xa0c <__fp_split3>
     8ac:	58 f3       	brcs	.-42     	; 0x884 <__addsf3+0xc>
     8ae:	ba 17       	cp	r27, r26
     8b0:	62 07       	cpc	r22, r18
     8b2:	73 07       	cpc	r23, r19
     8b4:	84 07       	cpc	r24, r20
     8b6:	95 07       	cpc	r25, r21
     8b8:	20 f0       	brcs	.+8      	; 0x8c2 <__addsf3x+0x1c>
     8ba:	79 f4       	brne	.+30     	; 0x8da <__addsf3x+0x34>
     8bc:	a6 f5       	brtc	.+104    	; 0x926 <__addsf3x+0x80>
     8be:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_zero>
     8c2:	0e f4       	brtc	.+2      	; 0x8c6 <__addsf3x+0x20>
     8c4:	e0 95       	com	r30
     8c6:	0b 2e       	mov	r0, r27
     8c8:	ba 2f       	mov	r27, r26
     8ca:	a0 2d       	mov	r26, r0
     8cc:	0b 01       	movw	r0, r22
     8ce:	b9 01       	movw	r22, r18
     8d0:	90 01       	movw	r18, r0
     8d2:	0c 01       	movw	r0, r24
     8d4:	ca 01       	movw	r24, r20
     8d6:	a0 01       	movw	r20, r0
     8d8:	11 24       	eor	r1, r1
     8da:	ff 27       	eor	r31, r31
     8dc:	59 1b       	sub	r21, r25
     8de:	99 f0       	breq	.+38     	; 0x906 <__addsf3x+0x60>
     8e0:	59 3f       	cpi	r21, 0xF9	; 249
     8e2:	50 f4       	brcc	.+20     	; 0x8f8 <__addsf3x+0x52>
     8e4:	50 3e       	cpi	r21, 0xE0	; 224
     8e6:	68 f1       	brcs	.+90     	; 0x942 <__addsf3x+0x9c>
     8e8:	1a 16       	cp	r1, r26
     8ea:	f0 40       	sbci	r31, 0x00	; 0
     8ec:	a2 2f       	mov	r26, r18
     8ee:	23 2f       	mov	r18, r19
     8f0:	34 2f       	mov	r19, r20
     8f2:	44 27       	eor	r20, r20
     8f4:	58 5f       	subi	r21, 0xF8	; 248
     8f6:	f3 cf       	rjmp	.-26     	; 0x8de <__addsf3x+0x38>
     8f8:	46 95       	lsr	r20
     8fa:	37 95       	ror	r19
     8fc:	27 95       	ror	r18
     8fe:	a7 95       	ror	r26
     900:	f0 40       	sbci	r31, 0x00	; 0
     902:	53 95       	inc	r21
     904:	c9 f7       	brne	.-14     	; 0x8f8 <__addsf3x+0x52>
     906:	7e f4       	brtc	.+30     	; 0x926 <__addsf3x+0x80>
     908:	1f 16       	cp	r1, r31
     90a:	ba 0b       	sbc	r27, r26
     90c:	62 0b       	sbc	r22, r18
     90e:	73 0b       	sbc	r23, r19
     910:	84 0b       	sbc	r24, r20
     912:	ba f0       	brmi	.+46     	; 0x942 <__addsf3x+0x9c>
     914:	91 50       	subi	r25, 0x01	; 1
     916:	a1 f0       	breq	.+40     	; 0x940 <__addsf3x+0x9a>
     918:	ff 0f       	add	r31, r31
     91a:	bb 1f       	adc	r27, r27
     91c:	66 1f       	adc	r22, r22
     91e:	77 1f       	adc	r23, r23
     920:	88 1f       	adc	r24, r24
     922:	c2 f7       	brpl	.-16     	; 0x914 <__addsf3x+0x6e>
     924:	0e c0       	rjmp	.+28     	; 0x942 <__addsf3x+0x9c>
     926:	ba 0f       	add	r27, r26
     928:	62 1f       	adc	r22, r18
     92a:	73 1f       	adc	r23, r19
     92c:	84 1f       	adc	r24, r20
     92e:	48 f4       	brcc	.+18     	; 0x942 <__addsf3x+0x9c>
     930:	87 95       	ror	r24
     932:	77 95       	ror	r23
     934:	67 95       	ror	r22
     936:	b7 95       	ror	r27
     938:	f7 95       	ror	r31
     93a:	9e 3f       	cpi	r25, 0xFE	; 254
     93c:	08 f0       	brcs	.+2      	; 0x940 <__addsf3x+0x9a>
     93e:	b0 cf       	rjmp	.-160    	; 0x8a0 <__addsf3+0x28>
     940:	93 95       	inc	r25
     942:	88 0f       	add	r24, r24
     944:	08 f0       	brcs	.+2      	; 0x948 <__addsf3x+0xa2>
     946:	99 27       	eor	r25, r25
     948:	ee 0f       	add	r30, r30
     94a:	97 95       	ror	r25
     94c:	87 95       	ror	r24
     94e:	08 95       	ret

00000950 <__fixsfsi>:
     950:	0e 94 af 04 	call	0x95e	; 0x95e <__fixunssfsi>
     954:	68 94       	set
     956:	b1 11       	cpse	r27, r1
     958:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__fp_szero>
     95c:	08 95       	ret

0000095e <__fixunssfsi>:
     95e:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__fp_splitA>
     962:	88 f0       	brcs	.+34     	; 0x986 <__fixunssfsi+0x28>
     964:	9f 57       	subi	r25, 0x7F	; 127
     966:	98 f0       	brcs	.+38     	; 0x98e <__fixunssfsi+0x30>
     968:	b9 2f       	mov	r27, r25
     96a:	99 27       	eor	r25, r25
     96c:	b7 51       	subi	r27, 0x17	; 23
     96e:	b0 f0       	brcs	.+44     	; 0x99c <__fixunssfsi+0x3e>
     970:	e1 f0       	breq	.+56     	; 0x9aa <__fixunssfsi+0x4c>
     972:	66 0f       	add	r22, r22
     974:	77 1f       	adc	r23, r23
     976:	88 1f       	adc	r24, r24
     978:	99 1f       	adc	r25, r25
     97a:	1a f0       	brmi	.+6      	; 0x982 <__fixunssfsi+0x24>
     97c:	ba 95       	dec	r27
     97e:	c9 f7       	brne	.-14     	; 0x972 <__fixunssfsi+0x14>
     980:	14 c0       	rjmp	.+40     	; 0x9aa <__fixunssfsi+0x4c>
     982:	b1 30       	cpi	r27, 0x01	; 1
     984:	91 f0       	breq	.+36     	; 0x9aa <__fixunssfsi+0x4c>
     986:	0e 94 28 05 	call	0xa50	; 0xa50 <__fp_zero>
     98a:	b1 e0       	ldi	r27, 0x01	; 1
     98c:	08 95       	ret
     98e:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_zero>
     992:	67 2f       	mov	r22, r23
     994:	78 2f       	mov	r23, r24
     996:	88 27       	eor	r24, r24
     998:	b8 5f       	subi	r27, 0xF8	; 248
     99a:	39 f0       	breq	.+14     	; 0x9aa <__fixunssfsi+0x4c>
     99c:	b9 3f       	cpi	r27, 0xF9	; 249
     99e:	cc f3       	brlt	.-14     	; 0x992 <__fixunssfsi+0x34>
     9a0:	86 95       	lsr	r24
     9a2:	77 95       	ror	r23
     9a4:	67 95       	ror	r22
     9a6:	b3 95       	inc	r27
     9a8:	d9 f7       	brne	.-10     	; 0x9a0 <__fixunssfsi+0x42>
     9aa:	3e f4       	brtc	.+14     	; 0x9ba <__fixunssfsi+0x5c>
     9ac:	90 95       	com	r25
     9ae:	80 95       	com	r24
     9b0:	70 95       	com	r23
     9b2:	61 95       	neg	r22
     9b4:	7f 4f       	sbci	r23, 0xFF	; 255
     9b6:	8f 4f       	sbci	r24, 0xFF	; 255
     9b8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ba:	08 95       	ret

000009bc <__fp_inf>:
     9bc:	97 f9       	bld	r25, 7
     9be:	9f 67       	ori	r25, 0x7F	; 127
     9c0:	80 e8       	ldi	r24, 0x80	; 128
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	08 95       	ret

000009c8 <__fp_nan>:
     9c8:	9f ef       	ldi	r25, 0xFF	; 255
     9ca:	80 ec       	ldi	r24, 0xC0	; 192
     9cc:	08 95       	ret

000009ce <__fp_pscA>:
     9ce:	00 24       	eor	r0, r0
     9d0:	0a 94       	dec	r0
     9d2:	16 16       	cp	r1, r22
     9d4:	17 06       	cpc	r1, r23
     9d6:	18 06       	cpc	r1, r24
     9d8:	09 06       	cpc	r0, r25
     9da:	08 95       	ret

000009dc <__fp_pscB>:
     9dc:	00 24       	eor	r0, r0
     9de:	0a 94       	dec	r0
     9e0:	12 16       	cp	r1, r18
     9e2:	13 06       	cpc	r1, r19
     9e4:	14 06       	cpc	r1, r20
     9e6:	05 06       	cpc	r0, r21
     9e8:	08 95       	ret

000009ea <__fp_round>:
     9ea:	09 2e       	mov	r0, r25
     9ec:	03 94       	inc	r0
     9ee:	00 0c       	add	r0, r0
     9f0:	11 f4       	brne	.+4      	; 0x9f6 <__fp_round+0xc>
     9f2:	88 23       	and	r24, r24
     9f4:	52 f0       	brmi	.+20     	; 0xa0a <__fp_round+0x20>
     9f6:	bb 0f       	add	r27, r27
     9f8:	40 f4       	brcc	.+16     	; 0xa0a <__fp_round+0x20>
     9fa:	bf 2b       	or	r27, r31
     9fc:	11 f4       	brne	.+4      	; 0xa02 <__fp_round+0x18>
     9fe:	60 ff       	sbrs	r22, 0
     a00:	04 c0       	rjmp	.+8      	; 0xa0a <__fp_round+0x20>
     a02:	6f 5f       	subi	r22, 0xFF	; 255
     a04:	7f 4f       	sbci	r23, 0xFF	; 255
     a06:	8f 4f       	sbci	r24, 0xFF	; 255
     a08:	9f 4f       	sbci	r25, 0xFF	; 255
     a0a:	08 95       	ret

00000a0c <__fp_split3>:
     a0c:	57 fd       	sbrc	r21, 7
     a0e:	90 58       	subi	r25, 0x80	; 128
     a10:	44 0f       	add	r20, r20
     a12:	55 1f       	adc	r21, r21
     a14:	59 f0       	breq	.+22     	; 0xa2c <__fp_splitA+0x10>
     a16:	5f 3f       	cpi	r21, 0xFF	; 255
     a18:	71 f0       	breq	.+28     	; 0xa36 <__fp_splitA+0x1a>
     a1a:	47 95       	ror	r20

00000a1c <__fp_splitA>:
     a1c:	88 0f       	add	r24, r24
     a1e:	97 fb       	bst	r25, 7
     a20:	99 1f       	adc	r25, r25
     a22:	61 f0       	breq	.+24     	; 0xa3c <__fp_splitA+0x20>
     a24:	9f 3f       	cpi	r25, 0xFF	; 255
     a26:	79 f0       	breq	.+30     	; 0xa46 <__fp_splitA+0x2a>
     a28:	87 95       	ror	r24
     a2a:	08 95       	ret
     a2c:	12 16       	cp	r1, r18
     a2e:	13 06       	cpc	r1, r19
     a30:	14 06       	cpc	r1, r20
     a32:	55 1f       	adc	r21, r21
     a34:	f2 cf       	rjmp	.-28     	; 0xa1a <__fp_split3+0xe>
     a36:	46 95       	lsr	r20
     a38:	f1 df       	rcall	.-30     	; 0xa1c <__fp_splitA>
     a3a:	08 c0       	rjmp	.+16     	; 0xa4c <__fp_splitA+0x30>
     a3c:	16 16       	cp	r1, r22
     a3e:	17 06       	cpc	r1, r23
     a40:	18 06       	cpc	r1, r24
     a42:	99 1f       	adc	r25, r25
     a44:	f1 cf       	rjmp	.-30     	; 0xa28 <__fp_splitA+0xc>
     a46:	86 95       	lsr	r24
     a48:	71 05       	cpc	r23, r1
     a4a:	61 05       	cpc	r22, r1
     a4c:	08 94       	sec
     a4e:	08 95       	ret

00000a50 <__fp_zero>:
     a50:	e8 94       	clt

00000a52 <__fp_szero>:
     a52:	bb 27       	eor	r27, r27
     a54:	66 27       	eor	r22, r22
     a56:	77 27       	eor	r23, r23
     a58:	cb 01       	movw	r24, r22
     a5a:	97 f9       	bld	r25, 7
     a5c:	08 95       	ret

00000a5e <__gesf2>:
     a5e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_cmp>
     a62:	08 f4       	brcc	.+2      	; 0xa66 <__gesf2+0x8>
     a64:	8f ef       	ldi	r24, 0xFF	; 255
     a66:	08 95       	ret

00000a68 <__mulsf3>:
     a68:	0e 94 47 05 	call	0xa8e	; 0xa8e <__mulsf3x>
     a6c:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__fp_round>
     a70:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__fp_pscA>
     a74:	38 f0       	brcs	.+14     	; 0xa84 <__mulsf3+0x1c>
     a76:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__fp_pscB>
     a7a:	20 f0       	brcs	.+8      	; 0xa84 <__mulsf3+0x1c>
     a7c:	95 23       	and	r25, r21
     a7e:	11 f0       	breq	.+4      	; 0xa84 <__mulsf3+0x1c>
     a80:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__fp_inf>
     a84:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_nan>
     a88:	11 24       	eor	r1, r1
     a8a:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__fp_szero>

00000a8e <__mulsf3x>:
     a8e:	0e 94 06 05 	call	0xa0c	; 0xa0c <__fp_split3>
     a92:	70 f3       	brcs	.-36     	; 0xa70 <__mulsf3+0x8>

00000a94 <__mulsf3_pse>:
     a94:	95 9f       	mul	r25, r21
     a96:	c1 f3       	breq	.-16     	; 0xa88 <__mulsf3+0x20>
     a98:	95 0f       	add	r25, r21
     a9a:	50 e0       	ldi	r21, 0x00	; 0
     a9c:	55 1f       	adc	r21, r21
     a9e:	62 9f       	mul	r22, r18
     aa0:	f0 01       	movw	r30, r0
     aa2:	72 9f       	mul	r23, r18
     aa4:	bb 27       	eor	r27, r27
     aa6:	f0 0d       	add	r31, r0
     aa8:	b1 1d       	adc	r27, r1
     aaa:	63 9f       	mul	r22, r19
     aac:	aa 27       	eor	r26, r26
     aae:	f0 0d       	add	r31, r0
     ab0:	b1 1d       	adc	r27, r1
     ab2:	aa 1f       	adc	r26, r26
     ab4:	64 9f       	mul	r22, r20
     ab6:	66 27       	eor	r22, r22
     ab8:	b0 0d       	add	r27, r0
     aba:	a1 1d       	adc	r26, r1
     abc:	66 1f       	adc	r22, r22
     abe:	82 9f       	mul	r24, r18
     ac0:	22 27       	eor	r18, r18
     ac2:	b0 0d       	add	r27, r0
     ac4:	a1 1d       	adc	r26, r1
     ac6:	62 1f       	adc	r22, r18
     ac8:	73 9f       	mul	r23, r19
     aca:	b0 0d       	add	r27, r0
     acc:	a1 1d       	adc	r26, r1
     ace:	62 1f       	adc	r22, r18
     ad0:	83 9f       	mul	r24, r19
     ad2:	a0 0d       	add	r26, r0
     ad4:	61 1d       	adc	r22, r1
     ad6:	22 1f       	adc	r18, r18
     ad8:	74 9f       	mul	r23, r20
     ada:	33 27       	eor	r19, r19
     adc:	a0 0d       	add	r26, r0
     ade:	61 1d       	adc	r22, r1
     ae0:	23 1f       	adc	r18, r19
     ae2:	84 9f       	mul	r24, r20
     ae4:	60 0d       	add	r22, r0
     ae6:	21 1d       	adc	r18, r1
     ae8:	82 2f       	mov	r24, r18
     aea:	76 2f       	mov	r23, r22
     aec:	6a 2f       	mov	r22, r26
     aee:	11 24       	eor	r1, r1
     af0:	9f 57       	subi	r25, 0x7F	; 127
     af2:	50 40       	sbci	r21, 0x00	; 0
     af4:	9a f0       	brmi	.+38     	; 0xb1c <__stack+0x1d>
     af6:	f1 f0       	breq	.+60     	; 0xb34 <__stack+0x35>
     af8:	88 23       	and	r24, r24
     afa:	4a f0       	brmi	.+18     	; 0xb0e <__stack+0xf>
     afc:	ee 0f       	add	r30, r30
     afe:	ff 1f       	adc	r31, r31
     b00:	bb 1f       	adc	r27, r27
     b02:	66 1f       	adc	r22, r22
     b04:	77 1f       	adc	r23, r23
     b06:	88 1f       	adc	r24, r24
     b08:	91 50       	subi	r25, 0x01	; 1
     b0a:	50 40       	sbci	r21, 0x00	; 0
     b0c:	a9 f7       	brne	.-22     	; 0xaf8 <__mulsf3_pse+0x64>
     b0e:	9e 3f       	cpi	r25, 0xFE	; 254
     b10:	51 05       	cpc	r21, r1
     b12:	80 f0       	brcs	.+32     	; 0xb34 <__stack+0x35>
     b14:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__fp_inf>
     b18:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__fp_szero>
     b1c:	5f 3f       	cpi	r21, 0xFF	; 255
     b1e:	e4 f3       	brlt	.-8      	; 0xb18 <__stack+0x19>
     b20:	98 3e       	cpi	r25, 0xE8	; 232
     b22:	d4 f3       	brlt	.-12     	; 0xb18 <__stack+0x19>
     b24:	86 95       	lsr	r24
     b26:	77 95       	ror	r23
     b28:	67 95       	ror	r22
     b2a:	b7 95       	ror	r27
     b2c:	f7 95       	ror	r31
     b2e:	e7 95       	ror	r30
     b30:	9f 5f       	subi	r25, 0xFF	; 255
     b32:	c1 f7       	brne	.-16     	; 0xb24 <__stack+0x25>
     b34:	fe 2b       	or	r31, r30
     b36:	88 0f       	add	r24, r24
     b38:	91 1d       	adc	r25, r1
     b3a:	96 95       	lsr	r25
     b3c:	87 95       	ror	r24
     b3e:	97 f9       	bld	r25, 7
     b40:	08 95       	ret

00000b42 <__fp_cmp>:
     b42:	99 0f       	add	r25, r25
     b44:	00 08       	sbc	r0, r0
     b46:	55 0f       	add	r21, r21
     b48:	aa 0b       	sbc	r26, r26
     b4a:	e0 e8       	ldi	r30, 0x80	; 128
     b4c:	fe ef       	ldi	r31, 0xFE	; 254
     b4e:	16 16       	cp	r1, r22
     b50:	17 06       	cpc	r1, r23
     b52:	e8 07       	cpc	r30, r24
     b54:	f9 07       	cpc	r31, r25
     b56:	c0 f0       	brcs	.+48     	; 0xb88 <__fp_cmp+0x46>
     b58:	12 16       	cp	r1, r18
     b5a:	13 06       	cpc	r1, r19
     b5c:	e4 07       	cpc	r30, r20
     b5e:	f5 07       	cpc	r31, r21
     b60:	98 f0       	brcs	.+38     	; 0xb88 <__fp_cmp+0x46>
     b62:	62 1b       	sub	r22, r18
     b64:	73 0b       	sbc	r23, r19
     b66:	84 0b       	sbc	r24, r20
     b68:	95 0b       	sbc	r25, r21
     b6a:	39 f4       	brne	.+14     	; 0xb7a <__fp_cmp+0x38>
     b6c:	0a 26       	eor	r0, r26
     b6e:	61 f0       	breq	.+24     	; 0xb88 <__fp_cmp+0x46>
     b70:	23 2b       	or	r18, r19
     b72:	24 2b       	or	r18, r20
     b74:	25 2b       	or	r18, r21
     b76:	21 f4       	brne	.+8      	; 0xb80 <__fp_cmp+0x3e>
     b78:	08 95       	ret
     b7a:	0a 26       	eor	r0, r26
     b7c:	09 f4       	brne	.+2      	; 0xb80 <__fp_cmp+0x3e>
     b7e:	a1 40       	sbci	r26, 0x01	; 1
     b80:	a6 95       	lsr	r26
     b82:	8f ef       	ldi	r24, 0xFF	; 255
     b84:	81 1d       	adc	r24, r1
     b86:	81 1d       	adc	r24, r1
     b88:	08 95       	ret

00000b8a <__divmodhi4>:
     b8a:	97 fb       	bst	r25, 7
     b8c:	07 2e       	mov	r0, r23
     b8e:	16 f4       	brtc	.+4      	; 0xb94 <__divmodhi4+0xa>
     b90:	00 94       	com	r0
     b92:	07 d0       	rcall	.+14     	; 0xba2 <__divmodhi4_neg1>
     b94:	77 fd       	sbrc	r23, 7
     b96:	09 d0       	rcall	.+18     	; 0xbaa <__divmodhi4_neg2>
     b98:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__udivmodhi4>
     b9c:	07 fc       	sbrc	r0, 7
     b9e:	05 d0       	rcall	.+10     	; 0xbaa <__divmodhi4_neg2>
     ba0:	3e f4       	brtc	.+14     	; 0xbb0 <__divmodhi4_exit>

00000ba2 <__divmodhi4_neg1>:
     ba2:	90 95       	com	r25
     ba4:	81 95       	neg	r24
     ba6:	9f 4f       	sbci	r25, 0xFF	; 255
     ba8:	08 95       	ret

00000baa <__divmodhi4_neg2>:
     baa:	70 95       	com	r23
     bac:	61 95       	neg	r22
     bae:	7f 4f       	sbci	r23, 0xFF	; 255

00000bb0 <__divmodhi4_exit>:
     bb0:	08 95       	ret

00000bb2 <__udivmodhi4>:
     bb2:	aa 1b       	sub	r26, r26
     bb4:	bb 1b       	sub	r27, r27
     bb6:	51 e1       	ldi	r21, 0x11	; 17
     bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <__udivmodhi4_ep>

00000bba <__udivmodhi4_loop>:
     bba:	aa 1f       	adc	r26, r26
     bbc:	bb 1f       	adc	r27, r27
     bbe:	a6 17       	cp	r26, r22
     bc0:	b7 07       	cpc	r27, r23
     bc2:	10 f0       	brcs	.+4      	; 0xbc8 <__udivmodhi4_ep>
     bc4:	a6 1b       	sub	r26, r22
     bc6:	b7 0b       	sbc	r27, r23

00000bc8 <__udivmodhi4_ep>:
     bc8:	88 1f       	adc	r24, r24
     bca:	99 1f       	adc	r25, r25
     bcc:	5a 95       	dec	r21
     bce:	a9 f7       	brne	.-22     	; 0xbba <__udivmodhi4_loop>
     bd0:	80 95       	com	r24
     bd2:	90 95       	com	r25
     bd4:	bc 01       	movw	r22, r24
     bd6:	cd 01       	movw	r24, r26
     bd8:	08 95       	ret

00000bda <sprintf>:
     bda:	ae e0       	ldi	r26, 0x0E	; 14
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e3 ef       	ldi	r30, 0xF3	; 243
     be0:	f5 e0       	ldi	r31, 0x05	; 5
     be2:	0c 94 ae 08 	jmp	0x115c	; 0x115c <__prologue_saves__+0x1c>
     be6:	0d 89       	ldd	r16, Y+21	; 0x15
     be8:	1e 89       	ldd	r17, Y+22	; 0x16
     bea:	86 e0       	ldi	r24, 0x06	; 6
     bec:	8c 83       	std	Y+4, r24	; 0x04
     bee:	1a 83       	std	Y+2, r17	; 0x02
     bf0:	09 83       	std	Y+1, r16	; 0x01
     bf2:	8f ef       	ldi	r24, 0xFF	; 255
     bf4:	9f e7       	ldi	r25, 0x7F	; 127
     bf6:	9e 83       	std	Y+6, r25	; 0x06
     bf8:	8d 83       	std	Y+5, r24	; 0x05
     bfa:	ae 01       	movw	r20, r28
     bfc:	47 5e       	subi	r20, 0xE7	; 231
     bfe:	5f 4f       	sbci	r21, 0xFF	; 255
     c00:	6f 89       	ldd	r22, Y+23	; 0x17
     c02:	78 8d       	ldd	r23, Y+24	; 0x18
     c04:	ce 01       	movw	r24, r28
     c06:	01 96       	adiw	r24, 0x01	; 1
     c08:	0e 94 0f 06 	call	0xc1e	; 0xc1e <vfprintf>
     c0c:	ef 81       	ldd	r30, Y+7	; 0x07
     c0e:	f8 85       	ldd	r31, Y+8	; 0x08
     c10:	e0 0f       	add	r30, r16
     c12:	f1 1f       	adc	r31, r17
     c14:	10 82       	st	Z, r1
     c16:	2e 96       	adiw	r28, 0x0e	; 14
     c18:	e4 e0       	ldi	r30, 0x04	; 4
     c1a:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__epilogue_restores__+0x1c>

00000c1e <vfprintf>:
     c1e:	ab e0       	ldi	r26, 0x0B	; 11
     c20:	b0 e0       	ldi	r27, 0x00	; 0
     c22:	e5 e1       	ldi	r30, 0x15	; 21
     c24:	f6 e0       	ldi	r31, 0x06	; 6
     c26:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__>
     c2a:	6c 01       	movw	r12, r24
     c2c:	7b 01       	movw	r14, r22
     c2e:	8a 01       	movw	r16, r20
     c30:	fc 01       	movw	r30, r24
     c32:	17 82       	std	Z+7, r1	; 0x07
     c34:	16 82       	std	Z+6, r1	; 0x06
     c36:	83 81       	ldd	r24, Z+3	; 0x03
     c38:	81 ff       	sbrs	r24, 1
     c3a:	cc c1       	rjmp	.+920    	; 0xfd4 <vfprintf+0x3b6>
     c3c:	ce 01       	movw	r24, r28
     c3e:	01 96       	adiw	r24, 0x01	; 1
     c40:	3c 01       	movw	r6, r24
     c42:	f6 01       	movw	r30, r12
     c44:	93 81       	ldd	r25, Z+3	; 0x03
     c46:	f7 01       	movw	r30, r14
     c48:	93 fd       	sbrc	r25, 3
     c4a:	85 91       	lpm	r24, Z+
     c4c:	93 ff       	sbrs	r25, 3
     c4e:	81 91       	ld	r24, Z+
     c50:	7f 01       	movw	r14, r30
     c52:	88 23       	and	r24, r24
     c54:	09 f4       	brne	.+2      	; 0xc58 <vfprintf+0x3a>
     c56:	ba c1       	rjmp	.+884    	; 0xfcc <vfprintf+0x3ae>
     c58:	85 32       	cpi	r24, 0x25	; 37
     c5a:	39 f4       	brne	.+14     	; 0xc6a <vfprintf+0x4c>
     c5c:	93 fd       	sbrc	r25, 3
     c5e:	85 91       	lpm	r24, Z+
     c60:	93 ff       	sbrs	r25, 3
     c62:	81 91       	ld	r24, Z+
     c64:	7f 01       	movw	r14, r30
     c66:	85 32       	cpi	r24, 0x25	; 37
     c68:	29 f4       	brne	.+10     	; 0xc74 <vfprintf+0x56>
     c6a:	b6 01       	movw	r22, r12
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     c72:	e7 cf       	rjmp	.-50     	; 0xc42 <vfprintf+0x24>
     c74:	91 2c       	mov	r9, r1
     c76:	21 2c       	mov	r2, r1
     c78:	31 2c       	mov	r3, r1
     c7a:	ff e1       	ldi	r31, 0x1F	; 31
     c7c:	f3 15       	cp	r31, r3
     c7e:	d8 f0       	brcs	.+54     	; 0xcb6 <vfprintf+0x98>
     c80:	8b 32       	cpi	r24, 0x2B	; 43
     c82:	79 f0       	breq	.+30     	; 0xca2 <vfprintf+0x84>
     c84:	38 f4       	brcc	.+14     	; 0xc94 <vfprintf+0x76>
     c86:	80 32       	cpi	r24, 0x20	; 32
     c88:	79 f0       	breq	.+30     	; 0xca8 <vfprintf+0x8a>
     c8a:	83 32       	cpi	r24, 0x23	; 35
     c8c:	a1 f4       	brne	.+40     	; 0xcb6 <vfprintf+0x98>
     c8e:	23 2d       	mov	r18, r3
     c90:	20 61       	ori	r18, 0x10	; 16
     c92:	1d c0       	rjmp	.+58     	; 0xcce <vfprintf+0xb0>
     c94:	8d 32       	cpi	r24, 0x2D	; 45
     c96:	61 f0       	breq	.+24     	; 0xcb0 <vfprintf+0x92>
     c98:	80 33       	cpi	r24, 0x30	; 48
     c9a:	69 f4       	brne	.+26     	; 0xcb6 <vfprintf+0x98>
     c9c:	23 2d       	mov	r18, r3
     c9e:	21 60       	ori	r18, 0x01	; 1
     ca0:	16 c0       	rjmp	.+44     	; 0xcce <vfprintf+0xb0>
     ca2:	83 2d       	mov	r24, r3
     ca4:	82 60       	ori	r24, 0x02	; 2
     ca6:	38 2e       	mov	r3, r24
     ca8:	e3 2d       	mov	r30, r3
     caa:	e4 60       	ori	r30, 0x04	; 4
     cac:	3e 2e       	mov	r3, r30
     cae:	2a c0       	rjmp	.+84     	; 0xd04 <vfprintf+0xe6>
     cb0:	f3 2d       	mov	r31, r3
     cb2:	f8 60       	ori	r31, 0x08	; 8
     cb4:	1d c0       	rjmp	.+58     	; 0xcf0 <vfprintf+0xd2>
     cb6:	37 fc       	sbrc	r3, 7
     cb8:	2d c0       	rjmp	.+90     	; 0xd14 <vfprintf+0xf6>
     cba:	20 ed       	ldi	r18, 0xD0	; 208
     cbc:	28 0f       	add	r18, r24
     cbe:	2a 30       	cpi	r18, 0x0A	; 10
     cc0:	40 f0       	brcs	.+16     	; 0xcd2 <vfprintf+0xb4>
     cc2:	8e 32       	cpi	r24, 0x2E	; 46
     cc4:	b9 f4       	brne	.+46     	; 0xcf4 <vfprintf+0xd6>
     cc6:	36 fc       	sbrc	r3, 6
     cc8:	81 c1       	rjmp	.+770    	; 0xfcc <vfprintf+0x3ae>
     cca:	23 2d       	mov	r18, r3
     ccc:	20 64       	ori	r18, 0x40	; 64
     cce:	32 2e       	mov	r3, r18
     cd0:	19 c0       	rjmp	.+50     	; 0xd04 <vfprintf+0xe6>
     cd2:	36 fe       	sbrs	r3, 6
     cd4:	06 c0       	rjmp	.+12     	; 0xce2 <vfprintf+0xc4>
     cd6:	8a e0       	ldi	r24, 0x0A	; 10
     cd8:	98 9e       	mul	r9, r24
     cda:	20 0d       	add	r18, r0
     cdc:	11 24       	eor	r1, r1
     cde:	92 2e       	mov	r9, r18
     ce0:	11 c0       	rjmp	.+34     	; 0xd04 <vfprintf+0xe6>
     ce2:	ea e0       	ldi	r30, 0x0A	; 10
     ce4:	2e 9e       	mul	r2, r30
     ce6:	20 0d       	add	r18, r0
     ce8:	11 24       	eor	r1, r1
     cea:	22 2e       	mov	r2, r18
     cec:	f3 2d       	mov	r31, r3
     cee:	f0 62       	ori	r31, 0x20	; 32
     cf0:	3f 2e       	mov	r3, r31
     cf2:	08 c0       	rjmp	.+16     	; 0xd04 <vfprintf+0xe6>
     cf4:	8c 36       	cpi	r24, 0x6C	; 108
     cf6:	21 f4       	brne	.+8      	; 0xd00 <vfprintf+0xe2>
     cf8:	83 2d       	mov	r24, r3
     cfa:	80 68       	ori	r24, 0x80	; 128
     cfc:	38 2e       	mov	r3, r24
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <vfprintf+0xe6>
     d00:	88 36       	cpi	r24, 0x68	; 104
     d02:	41 f4       	brne	.+16     	; 0xd14 <vfprintf+0xf6>
     d04:	f7 01       	movw	r30, r14
     d06:	93 fd       	sbrc	r25, 3
     d08:	85 91       	lpm	r24, Z+
     d0a:	93 ff       	sbrs	r25, 3
     d0c:	81 91       	ld	r24, Z+
     d0e:	7f 01       	movw	r14, r30
     d10:	81 11       	cpse	r24, r1
     d12:	b3 cf       	rjmp	.-154    	; 0xc7a <vfprintf+0x5c>
     d14:	98 2f       	mov	r25, r24
     d16:	9f 7d       	andi	r25, 0xDF	; 223
     d18:	95 54       	subi	r25, 0x45	; 69
     d1a:	93 30       	cpi	r25, 0x03	; 3
     d1c:	28 f4       	brcc	.+10     	; 0xd28 <vfprintf+0x10a>
     d1e:	0c 5f       	subi	r16, 0xFC	; 252
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	9f e3       	ldi	r25, 0x3F	; 63
     d24:	99 83       	std	Y+1, r25	; 0x01
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <vfprintf+0x124>
     d28:	83 36       	cpi	r24, 0x63	; 99
     d2a:	31 f0       	breq	.+12     	; 0xd38 <vfprintf+0x11a>
     d2c:	83 37       	cpi	r24, 0x73	; 115
     d2e:	71 f0       	breq	.+28     	; 0xd4c <vfprintf+0x12e>
     d30:	83 35       	cpi	r24, 0x53	; 83
     d32:	09 f0       	breq	.+2      	; 0xd36 <vfprintf+0x118>
     d34:	59 c0       	rjmp	.+178    	; 0xde8 <vfprintf+0x1ca>
     d36:	21 c0       	rjmp	.+66     	; 0xd7a <vfprintf+0x15c>
     d38:	f8 01       	movw	r30, r16
     d3a:	80 81       	ld	r24, Z
     d3c:	89 83       	std	Y+1, r24	; 0x01
     d3e:	0e 5f       	subi	r16, 0xFE	; 254
     d40:	1f 4f       	sbci	r17, 0xFF	; 255
     d42:	88 24       	eor	r8, r8
     d44:	83 94       	inc	r8
     d46:	91 2c       	mov	r9, r1
     d48:	53 01       	movw	r10, r6
     d4a:	13 c0       	rjmp	.+38     	; 0xd72 <vfprintf+0x154>
     d4c:	28 01       	movw	r4, r16
     d4e:	f2 e0       	ldi	r31, 0x02	; 2
     d50:	4f 0e       	add	r4, r31
     d52:	51 1c       	adc	r5, r1
     d54:	f8 01       	movw	r30, r16
     d56:	a0 80       	ld	r10, Z
     d58:	b1 80       	ldd	r11, Z+1	; 0x01
     d5a:	36 fe       	sbrs	r3, 6
     d5c:	03 c0       	rjmp	.+6      	; 0xd64 <vfprintf+0x146>
     d5e:	69 2d       	mov	r22, r9
     d60:	70 e0       	ldi	r23, 0x00	; 0
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <vfprintf+0x14a>
     d64:	6f ef       	ldi	r22, 0xFF	; 255
     d66:	7f ef       	ldi	r23, 0xFF	; 255
     d68:	c5 01       	movw	r24, r10
     d6a:	0e 94 fb 07 	call	0xff6	; 0xff6 <strnlen>
     d6e:	4c 01       	movw	r8, r24
     d70:	82 01       	movw	r16, r4
     d72:	f3 2d       	mov	r31, r3
     d74:	ff 77       	andi	r31, 0x7F	; 127
     d76:	3f 2e       	mov	r3, r31
     d78:	16 c0       	rjmp	.+44     	; 0xda6 <vfprintf+0x188>
     d7a:	28 01       	movw	r4, r16
     d7c:	22 e0       	ldi	r18, 0x02	; 2
     d7e:	42 0e       	add	r4, r18
     d80:	51 1c       	adc	r5, r1
     d82:	f8 01       	movw	r30, r16
     d84:	a0 80       	ld	r10, Z
     d86:	b1 80       	ldd	r11, Z+1	; 0x01
     d88:	36 fe       	sbrs	r3, 6
     d8a:	03 c0       	rjmp	.+6      	; 0xd92 <vfprintf+0x174>
     d8c:	69 2d       	mov	r22, r9
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <vfprintf+0x178>
     d92:	6f ef       	ldi	r22, 0xFF	; 255
     d94:	7f ef       	ldi	r23, 0xFF	; 255
     d96:	c5 01       	movw	r24, r10
     d98:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <strnlen_P>
     d9c:	4c 01       	movw	r8, r24
     d9e:	f3 2d       	mov	r31, r3
     da0:	f0 68       	ori	r31, 0x80	; 128
     da2:	3f 2e       	mov	r3, r31
     da4:	82 01       	movw	r16, r4
     da6:	33 fc       	sbrc	r3, 3
     da8:	1b c0       	rjmp	.+54     	; 0xde0 <vfprintf+0x1c2>
     daa:	82 2d       	mov	r24, r2
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	88 16       	cp	r8, r24
     db0:	99 06       	cpc	r9, r25
     db2:	b0 f4       	brcc	.+44     	; 0xde0 <vfprintf+0x1c2>
     db4:	b6 01       	movw	r22, r12
     db6:	80 e2       	ldi	r24, 0x20	; 32
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     dbe:	2a 94       	dec	r2
     dc0:	f4 cf       	rjmp	.-24     	; 0xdaa <vfprintf+0x18c>
     dc2:	f5 01       	movw	r30, r10
     dc4:	37 fc       	sbrc	r3, 7
     dc6:	85 91       	lpm	r24, Z+
     dc8:	37 fe       	sbrs	r3, 7
     dca:	81 91       	ld	r24, Z+
     dcc:	5f 01       	movw	r10, r30
     dce:	b6 01       	movw	r22, r12
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     dd6:	21 10       	cpse	r2, r1
     dd8:	2a 94       	dec	r2
     dda:	21 e0       	ldi	r18, 0x01	; 1
     ddc:	82 1a       	sub	r8, r18
     dde:	91 08       	sbc	r9, r1
     de0:	81 14       	cp	r8, r1
     de2:	91 04       	cpc	r9, r1
     de4:	71 f7       	brne	.-36     	; 0xdc2 <vfprintf+0x1a4>
     de6:	e8 c0       	rjmp	.+464    	; 0xfb8 <vfprintf+0x39a>
     de8:	84 36       	cpi	r24, 0x64	; 100
     dea:	11 f0       	breq	.+4      	; 0xdf0 <vfprintf+0x1d2>
     dec:	89 36       	cpi	r24, 0x69	; 105
     dee:	41 f5       	brne	.+80     	; 0xe40 <vfprintf+0x222>
     df0:	f8 01       	movw	r30, r16
     df2:	37 fe       	sbrs	r3, 7
     df4:	07 c0       	rjmp	.+14     	; 0xe04 <vfprintf+0x1e6>
     df6:	60 81       	ld	r22, Z
     df8:	71 81       	ldd	r23, Z+1	; 0x01
     dfa:	82 81       	ldd	r24, Z+2	; 0x02
     dfc:	93 81       	ldd	r25, Z+3	; 0x03
     dfe:	0c 5f       	subi	r16, 0xFC	; 252
     e00:	1f 4f       	sbci	r17, 0xFF	; 255
     e02:	08 c0       	rjmp	.+16     	; 0xe14 <vfprintf+0x1f6>
     e04:	60 81       	ld	r22, Z
     e06:	71 81       	ldd	r23, Z+1	; 0x01
     e08:	07 2e       	mov	r0, r23
     e0a:	00 0c       	add	r0, r0
     e0c:	88 0b       	sbc	r24, r24
     e0e:	99 0b       	sbc	r25, r25
     e10:	0e 5f       	subi	r16, 0xFE	; 254
     e12:	1f 4f       	sbci	r17, 0xFF	; 255
     e14:	f3 2d       	mov	r31, r3
     e16:	ff 76       	andi	r31, 0x6F	; 111
     e18:	3f 2e       	mov	r3, r31
     e1a:	97 ff       	sbrs	r25, 7
     e1c:	09 c0       	rjmp	.+18     	; 0xe30 <vfprintf+0x212>
     e1e:	90 95       	com	r25
     e20:	80 95       	com	r24
     e22:	70 95       	com	r23
     e24:	61 95       	neg	r22
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	8f 4f       	sbci	r24, 0xFF	; 255
     e2a:	9f 4f       	sbci	r25, 0xFF	; 255
     e2c:	f0 68       	ori	r31, 0x80	; 128
     e2e:	3f 2e       	mov	r3, r31
     e30:	2a e0       	ldi	r18, 0x0A	; 10
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	a3 01       	movw	r20, r6
     e36:	0e 94 42 08 	call	0x1084	; 0x1084 <__ultoa_invert>
     e3a:	88 2e       	mov	r8, r24
     e3c:	86 18       	sub	r8, r6
     e3e:	45 c0       	rjmp	.+138    	; 0xeca <vfprintf+0x2ac>
     e40:	85 37       	cpi	r24, 0x75	; 117
     e42:	31 f4       	brne	.+12     	; 0xe50 <vfprintf+0x232>
     e44:	23 2d       	mov	r18, r3
     e46:	2f 7e       	andi	r18, 0xEF	; 239
     e48:	b2 2e       	mov	r11, r18
     e4a:	2a e0       	ldi	r18, 0x0A	; 10
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	25 c0       	rjmp	.+74     	; 0xe9a <vfprintf+0x27c>
     e50:	93 2d       	mov	r25, r3
     e52:	99 7f       	andi	r25, 0xF9	; 249
     e54:	b9 2e       	mov	r11, r25
     e56:	8f 36       	cpi	r24, 0x6F	; 111
     e58:	c1 f0       	breq	.+48     	; 0xe8a <vfprintf+0x26c>
     e5a:	18 f4       	brcc	.+6      	; 0xe62 <vfprintf+0x244>
     e5c:	88 35       	cpi	r24, 0x58	; 88
     e5e:	79 f0       	breq	.+30     	; 0xe7e <vfprintf+0x260>
     e60:	b5 c0       	rjmp	.+362    	; 0xfcc <vfprintf+0x3ae>
     e62:	80 37       	cpi	r24, 0x70	; 112
     e64:	19 f0       	breq	.+6      	; 0xe6c <vfprintf+0x24e>
     e66:	88 37       	cpi	r24, 0x78	; 120
     e68:	21 f0       	breq	.+8      	; 0xe72 <vfprintf+0x254>
     e6a:	b0 c0       	rjmp	.+352    	; 0xfcc <vfprintf+0x3ae>
     e6c:	e9 2f       	mov	r30, r25
     e6e:	e0 61       	ori	r30, 0x10	; 16
     e70:	be 2e       	mov	r11, r30
     e72:	b4 fe       	sbrs	r11, 4
     e74:	0d c0       	rjmp	.+26     	; 0xe90 <vfprintf+0x272>
     e76:	fb 2d       	mov	r31, r11
     e78:	f4 60       	ori	r31, 0x04	; 4
     e7a:	bf 2e       	mov	r11, r31
     e7c:	09 c0       	rjmp	.+18     	; 0xe90 <vfprintf+0x272>
     e7e:	34 fe       	sbrs	r3, 4
     e80:	0a c0       	rjmp	.+20     	; 0xe96 <vfprintf+0x278>
     e82:	29 2f       	mov	r18, r25
     e84:	26 60       	ori	r18, 0x06	; 6
     e86:	b2 2e       	mov	r11, r18
     e88:	06 c0       	rjmp	.+12     	; 0xe96 <vfprintf+0x278>
     e8a:	28 e0       	ldi	r18, 0x08	; 8
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	05 c0       	rjmp	.+10     	; 0xe9a <vfprintf+0x27c>
     e90:	20 e1       	ldi	r18, 0x10	; 16
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x27c>
     e96:	20 e1       	ldi	r18, 0x10	; 16
     e98:	32 e0       	ldi	r19, 0x02	; 2
     e9a:	f8 01       	movw	r30, r16
     e9c:	b7 fe       	sbrs	r11, 7
     e9e:	07 c0       	rjmp	.+14     	; 0xeae <vfprintf+0x290>
     ea0:	60 81       	ld	r22, Z
     ea2:	71 81       	ldd	r23, Z+1	; 0x01
     ea4:	82 81       	ldd	r24, Z+2	; 0x02
     ea6:	93 81       	ldd	r25, Z+3	; 0x03
     ea8:	0c 5f       	subi	r16, 0xFC	; 252
     eaa:	1f 4f       	sbci	r17, 0xFF	; 255
     eac:	06 c0       	rjmp	.+12     	; 0xeba <vfprintf+0x29c>
     eae:	60 81       	ld	r22, Z
     eb0:	71 81       	ldd	r23, Z+1	; 0x01
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	0e 5f       	subi	r16, 0xFE	; 254
     eb8:	1f 4f       	sbci	r17, 0xFF	; 255
     eba:	a3 01       	movw	r20, r6
     ebc:	0e 94 42 08 	call	0x1084	; 0x1084 <__ultoa_invert>
     ec0:	88 2e       	mov	r8, r24
     ec2:	86 18       	sub	r8, r6
     ec4:	fb 2d       	mov	r31, r11
     ec6:	ff 77       	andi	r31, 0x7F	; 127
     ec8:	3f 2e       	mov	r3, r31
     eca:	36 fe       	sbrs	r3, 6
     ecc:	0d c0       	rjmp	.+26     	; 0xee8 <vfprintf+0x2ca>
     ece:	23 2d       	mov	r18, r3
     ed0:	2e 7f       	andi	r18, 0xFE	; 254
     ed2:	a2 2e       	mov	r10, r18
     ed4:	89 14       	cp	r8, r9
     ed6:	58 f4       	brcc	.+22     	; 0xeee <vfprintf+0x2d0>
     ed8:	34 fe       	sbrs	r3, 4
     eda:	0b c0       	rjmp	.+22     	; 0xef2 <vfprintf+0x2d4>
     edc:	32 fc       	sbrc	r3, 2
     ede:	09 c0       	rjmp	.+18     	; 0xef2 <vfprintf+0x2d4>
     ee0:	83 2d       	mov	r24, r3
     ee2:	8e 7e       	andi	r24, 0xEE	; 238
     ee4:	a8 2e       	mov	r10, r24
     ee6:	05 c0       	rjmp	.+10     	; 0xef2 <vfprintf+0x2d4>
     ee8:	b8 2c       	mov	r11, r8
     eea:	a3 2c       	mov	r10, r3
     eec:	03 c0       	rjmp	.+6      	; 0xef4 <vfprintf+0x2d6>
     eee:	b8 2c       	mov	r11, r8
     ef0:	01 c0       	rjmp	.+2      	; 0xef4 <vfprintf+0x2d6>
     ef2:	b9 2c       	mov	r11, r9
     ef4:	a4 fe       	sbrs	r10, 4
     ef6:	0f c0       	rjmp	.+30     	; 0xf16 <vfprintf+0x2f8>
     ef8:	fe 01       	movw	r30, r28
     efa:	e8 0d       	add	r30, r8
     efc:	f1 1d       	adc	r31, r1
     efe:	80 81       	ld	r24, Z
     f00:	80 33       	cpi	r24, 0x30	; 48
     f02:	21 f4       	brne	.+8      	; 0xf0c <vfprintf+0x2ee>
     f04:	9a 2d       	mov	r25, r10
     f06:	99 7e       	andi	r25, 0xE9	; 233
     f08:	a9 2e       	mov	r10, r25
     f0a:	09 c0       	rjmp	.+18     	; 0xf1e <vfprintf+0x300>
     f0c:	a2 fe       	sbrs	r10, 2
     f0e:	06 c0       	rjmp	.+12     	; 0xf1c <vfprintf+0x2fe>
     f10:	b3 94       	inc	r11
     f12:	b3 94       	inc	r11
     f14:	04 c0       	rjmp	.+8      	; 0xf1e <vfprintf+0x300>
     f16:	8a 2d       	mov	r24, r10
     f18:	86 78       	andi	r24, 0x86	; 134
     f1a:	09 f0       	breq	.+2      	; 0xf1e <vfprintf+0x300>
     f1c:	b3 94       	inc	r11
     f1e:	a3 fc       	sbrc	r10, 3
     f20:	11 c0       	rjmp	.+34     	; 0xf44 <vfprintf+0x326>
     f22:	a0 fe       	sbrs	r10, 0
     f24:	06 c0       	rjmp	.+12     	; 0xf32 <vfprintf+0x314>
     f26:	b2 14       	cp	r11, r2
     f28:	88 f4       	brcc	.+34     	; 0xf4c <vfprintf+0x32e>
     f2a:	28 0c       	add	r2, r8
     f2c:	92 2c       	mov	r9, r2
     f2e:	9b 18       	sub	r9, r11
     f30:	0e c0       	rjmp	.+28     	; 0xf4e <vfprintf+0x330>
     f32:	b2 14       	cp	r11, r2
     f34:	60 f4       	brcc	.+24     	; 0xf4e <vfprintf+0x330>
     f36:	b6 01       	movw	r22, r12
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     f40:	b3 94       	inc	r11
     f42:	f7 cf       	rjmp	.-18     	; 0xf32 <vfprintf+0x314>
     f44:	b2 14       	cp	r11, r2
     f46:	18 f4       	brcc	.+6      	; 0xf4e <vfprintf+0x330>
     f48:	2b 18       	sub	r2, r11
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <vfprintf+0x332>
     f4c:	98 2c       	mov	r9, r8
     f4e:	21 2c       	mov	r2, r1
     f50:	a4 fe       	sbrs	r10, 4
     f52:	10 c0       	rjmp	.+32     	; 0xf74 <vfprintf+0x356>
     f54:	b6 01       	movw	r22, r12
     f56:	80 e3       	ldi	r24, 0x30	; 48
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     f5e:	a2 fe       	sbrs	r10, 2
     f60:	17 c0       	rjmp	.+46     	; 0xf90 <vfprintf+0x372>
     f62:	a1 fc       	sbrc	r10, 1
     f64:	03 c0       	rjmp	.+6      	; 0xf6c <vfprintf+0x34e>
     f66:	88 e7       	ldi	r24, 0x78	; 120
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <vfprintf+0x352>
     f6c:	88 e5       	ldi	r24, 0x58	; 88
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	b6 01       	movw	r22, r12
     f72:	0c c0       	rjmp	.+24     	; 0xf8c <vfprintf+0x36e>
     f74:	8a 2d       	mov	r24, r10
     f76:	86 78       	andi	r24, 0x86	; 134
     f78:	59 f0       	breq	.+22     	; 0xf90 <vfprintf+0x372>
     f7a:	a1 fe       	sbrs	r10, 1
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <vfprintf+0x364>
     f7e:	8b e2       	ldi	r24, 0x2B	; 43
     f80:	01 c0       	rjmp	.+2      	; 0xf84 <vfprintf+0x366>
     f82:	80 e2       	ldi	r24, 0x20	; 32
     f84:	a7 fc       	sbrc	r10, 7
     f86:	8d e2       	ldi	r24, 0x2D	; 45
     f88:	b6 01       	movw	r22, r12
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     f90:	89 14       	cp	r8, r9
     f92:	38 f4       	brcc	.+14     	; 0xfa2 <vfprintf+0x384>
     f94:	b6 01       	movw	r22, r12
     f96:	80 e3       	ldi	r24, 0x30	; 48
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     f9e:	9a 94       	dec	r9
     fa0:	f7 cf       	rjmp	.-18     	; 0xf90 <vfprintf+0x372>
     fa2:	8a 94       	dec	r8
     fa4:	f3 01       	movw	r30, r6
     fa6:	e8 0d       	add	r30, r8
     fa8:	f1 1d       	adc	r31, r1
     faa:	80 81       	ld	r24, Z
     fac:	b6 01       	movw	r22, r12
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     fb4:	81 10       	cpse	r8, r1
     fb6:	f5 cf       	rjmp	.-22     	; 0xfa2 <vfprintf+0x384>
     fb8:	22 20       	and	r2, r2
     fba:	09 f4       	brne	.+2      	; 0xfbe <vfprintf+0x3a0>
     fbc:	42 ce       	rjmp	.-892    	; 0xc42 <vfprintf+0x24>
     fbe:	b6 01       	movw	r22, r12
     fc0:	80 e2       	ldi	r24, 0x20	; 32
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	0e 94 06 08 	call	0x100c	; 0x100c <fputc>
     fc8:	2a 94       	dec	r2
     fca:	f6 cf       	rjmp	.-20     	; 0xfb8 <vfprintf+0x39a>
     fcc:	f6 01       	movw	r30, r12
     fce:	86 81       	ldd	r24, Z+6	; 0x06
     fd0:	97 81       	ldd	r25, Z+7	; 0x07
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <vfprintf+0x3ba>
     fd4:	8f ef       	ldi	r24, 0xFF	; 255
     fd6:	9f ef       	ldi	r25, 0xFF	; 255
     fd8:	2b 96       	adiw	r28, 0x0b	; 11
     fda:	e2 e1       	ldi	r30, 0x12	; 18
     fdc:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__>

00000fe0 <strnlen_P>:
     fe0:	fc 01       	movw	r30, r24
     fe2:	05 90       	lpm	r0, Z+
     fe4:	61 50       	subi	r22, 0x01	; 1
     fe6:	70 40       	sbci	r23, 0x00	; 0
     fe8:	01 10       	cpse	r0, r1
     fea:	d8 f7       	brcc	.-10     	; 0xfe2 <strnlen_P+0x2>
     fec:	80 95       	com	r24
     fee:	90 95       	com	r25
     ff0:	8e 0f       	add	r24, r30
     ff2:	9f 1f       	adc	r25, r31
     ff4:	08 95       	ret

00000ff6 <strnlen>:
     ff6:	fc 01       	movw	r30, r24
     ff8:	61 50       	subi	r22, 0x01	; 1
     ffa:	70 40       	sbci	r23, 0x00	; 0
     ffc:	01 90       	ld	r0, Z+
     ffe:	01 10       	cpse	r0, r1
    1000:	d8 f7       	brcc	.-10     	; 0xff8 <strnlen+0x2>
    1002:	80 95       	com	r24
    1004:	90 95       	com	r25
    1006:	8e 0f       	add	r24, r30
    1008:	9f 1f       	adc	r25, r31
    100a:	08 95       	ret

0000100c <fputc>:
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	fb 01       	movw	r30, r22
    1016:	23 81       	ldd	r18, Z+3	; 0x03
    1018:	21 fd       	sbrc	r18, 1
    101a:	03 c0       	rjmp	.+6      	; 0x1022 <fputc+0x16>
    101c:	8f ef       	ldi	r24, 0xFF	; 255
    101e:	9f ef       	ldi	r25, 0xFF	; 255
    1020:	2c c0       	rjmp	.+88     	; 0x107a <fputc+0x6e>
    1022:	22 ff       	sbrs	r18, 2
    1024:	16 c0       	rjmp	.+44     	; 0x1052 <fputc+0x46>
    1026:	46 81       	ldd	r20, Z+6	; 0x06
    1028:	57 81       	ldd	r21, Z+7	; 0x07
    102a:	24 81       	ldd	r18, Z+4	; 0x04
    102c:	35 81       	ldd	r19, Z+5	; 0x05
    102e:	42 17       	cp	r20, r18
    1030:	53 07       	cpc	r21, r19
    1032:	44 f4       	brge	.+16     	; 0x1044 <fputc+0x38>
    1034:	a0 81       	ld	r26, Z
    1036:	b1 81       	ldd	r27, Z+1	; 0x01
    1038:	9d 01       	movw	r18, r26
    103a:	2f 5f       	subi	r18, 0xFF	; 255
    103c:	3f 4f       	sbci	r19, 0xFF	; 255
    103e:	31 83       	std	Z+1, r19	; 0x01
    1040:	20 83       	st	Z, r18
    1042:	8c 93       	st	X, r24
    1044:	26 81       	ldd	r18, Z+6	; 0x06
    1046:	37 81       	ldd	r19, Z+7	; 0x07
    1048:	2f 5f       	subi	r18, 0xFF	; 255
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	37 83       	std	Z+7, r19	; 0x07
    104e:	26 83       	std	Z+6, r18	; 0x06
    1050:	14 c0       	rjmp	.+40     	; 0x107a <fputc+0x6e>
    1052:	8b 01       	movw	r16, r22
    1054:	ec 01       	movw	r28, r24
    1056:	fb 01       	movw	r30, r22
    1058:	00 84       	ldd	r0, Z+8	; 0x08
    105a:	f1 85       	ldd	r31, Z+9	; 0x09
    105c:	e0 2d       	mov	r30, r0
    105e:	09 95       	icall
    1060:	89 2b       	or	r24, r25
    1062:	e1 f6       	brne	.-72     	; 0x101c <fputc+0x10>
    1064:	d8 01       	movw	r26, r16
    1066:	16 96       	adiw	r26, 0x06	; 6
    1068:	8d 91       	ld	r24, X+
    106a:	9c 91       	ld	r25, X
    106c:	17 97       	sbiw	r26, 0x07	; 7
    106e:	01 96       	adiw	r24, 0x01	; 1
    1070:	17 96       	adiw	r26, 0x07	; 7
    1072:	9c 93       	st	X, r25
    1074:	8e 93       	st	-X, r24
    1076:	16 97       	sbiw	r26, 0x06	; 6
    1078:	ce 01       	movw	r24, r28
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	1f 91       	pop	r17
    1080:	0f 91       	pop	r16
    1082:	08 95       	ret

00001084 <__ultoa_invert>:
    1084:	fa 01       	movw	r30, r20
    1086:	aa 27       	eor	r26, r26
    1088:	28 30       	cpi	r18, 0x08	; 8
    108a:	51 f1       	breq	.+84     	; 0x10e0 <__ultoa_invert+0x5c>
    108c:	20 31       	cpi	r18, 0x10	; 16
    108e:	81 f1       	breq	.+96     	; 0x10f0 <__ultoa_invert+0x6c>
    1090:	e8 94       	clt
    1092:	6f 93       	push	r22
    1094:	6e 7f       	andi	r22, 0xFE	; 254
    1096:	6e 5f       	subi	r22, 0xFE	; 254
    1098:	7f 4f       	sbci	r23, 0xFF	; 255
    109a:	8f 4f       	sbci	r24, 0xFF	; 255
    109c:	9f 4f       	sbci	r25, 0xFF	; 255
    109e:	af 4f       	sbci	r26, 0xFF	; 255
    10a0:	b1 e0       	ldi	r27, 0x01	; 1
    10a2:	3e d0       	rcall	.+124    	; 0x1120 <__ultoa_invert+0x9c>
    10a4:	b4 e0       	ldi	r27, 0x04	; 4
    10a6:	3c d0       	rcall	.+120    	; 0x1120 <__ultoa_invert+0x9c>
    10a8:	67 0f       	add	r22, r23
    10aa:	78 1f       	adc	r23, r24
    10ac:	89 1f       	adc	r24, r25
    10ae:	9a 1f       	adc	r25, r26
    10b0:	a1 1d       	adc	r26, r1
    10b2:	68 0f       	add	r22, r24
    10b4:	79 1f       	adc	r23, r25
    10b6:	8a 1f       	adc	r24, r26
    10b8:	91 1d       	adc	r25, r1
    10ba:	a1 1d       	adc	r26, r1
    10bc:	6a 0f       	add	r22, r26
    10be:	71 1d       	adc	r23, r1
    10c0:	81 1d       	adc	r24, r1
    10c2:	91 1d       	adc	r25, r1
    10c4:	a1 1d       	adc	r26, r1
    10c6:	20 d0       	rcall	.+64     	; 0x1108 <__ultoa_invert+0x84>
    10c8:	09 f4       	brne	.+2      	; 0x10cc <__ultoa_invert+0x48>
    10ca:	68 94       	set
    10cc:	3f 91       	pop	r19
    10ce:	2a e0       	ldi	r18, 0x0A	; 10
    10d0:	26 9f       	mul	r18, r22
    10d2:	11 24       	eor	r1, r1
    10d4:	30 19       	sub	r19, r0
    10d6:	30 5d       	subi	r19, 0xD0	; 208
    10d8:	31 93       	st	Z+, r19
    10da:	de f6       	brtc	.-74     	; 0x1092 <__ultoa_invert+0xe>
    10dc:	cf 01       	movw	r24, r30
    10de:	08 95       	ret
    10e0:	46 2f       	mov	r20, r22
    10e2:	47 70       	andi	r20, 0x07	; 7
    10e4:	40 5d       	subi	r20, 0xD0	; 208
    10e6:	41 93       	st	Z+, r20
    10e8:	b3 e0       	ldi	r27, 0x03	; 3
    10ea:	0f d0       	rcall	.+30     	; 0x110a <__ultoa_invert+0x86>
    10ec:	c9 f7       	brne	.-14     	; 0x10e0 <__ultoa_invert+0x5c>
    10ee:	f6 cf       	rjmp	.-20     	; 0x10dc <__ultoa_invert+0x58>
    10f0:	46 2f       	mov	r20, r22
    10f2:	4f 70       	andi	r20, 0x0F	; 15
    10f4:	40 5d       	subi	r20, 0xD0	; 208
    10f6:	4a 33       	cpi	r20, 0x3A	; 58
    10f8:	18 f0       	brcs	.+6      	; 0x1100 <__ultoa_invert+0x7c>
    10fa:	49 5d       	subi	r20, 0xD9	; 217
    10fc:	31 fd       	sbrc	r19, 1
    10fe:	40 52       	subi	r20, 0x20	; 32
    1100:	41 93       	st	Z+, r20
    1102:	02 d0       	rcall	.+4      	; 0x1108 <__ultoa_invert+0x84>
    1104:	a9 f7       	brne	.-22     	; 0x10f0 <__ultoa_invert+0x6c>
    1106:	ea cf       	rjmp	.-44     	; 0x10dc <__ultoa_invert+0x58>
    1108:	b4 e0       	ldi	r27, 0x04	; 4
    110a:	a6 95       	lsr	r26
    110c:	97 95       	ror	r25
    110e:	87 95       	ror	r24
    1110:	77 95       	ror	r23
    1112:	67 95       	ror	r22
    1114:	ba 95       	dec	r27
    1116:	c9 f7       	brne	.-14     	; 0x110a <__ultoa_invert+0x86>
    1118:	00 97       	sbiw	r24, 0x00	; 0
    111a:	61 05       	cpc	r22, r1
    111c:	71 05       	cpc	r23, r1
    111e:	08 95       	ret
    1120:	9b 01       	movw	r18, r22
    1122:	ac 01       	movw	r20, r24
    1124:	0a 2e       	mov	r0, r26
    1126:	06 94       	lsr	r0
    1128:	57 95       	ror	r21
    112a:	47 95       	ror	r20
    112c:	37 95       	ror	r19
    112e:	27 95       	ror	r18
    1130:	ba 95       	dec	r27
    1132:	c9 f7       	brne	.-14     	; 0x1126 <__ultoa_invert+0xa2>
    1134:	62 0f       	add	r22, r18
    1136:	73 1f       	adc	r23, r19
    1138:	84 1f       	adc	r24, r20
    113a:	95 1f       	adc	r25, r21
    113c:	a0 1d       	adc	r26, r0
    113e:	08 95       	ret

00001140 <__prologue_saves__>:
    1140:	2f 92       	push	r2
    1142:	3f 92       	push	r3
    1144:	4f 92       	push	r4
    1146:	5f 92       	push	r5
    1148:	6f 92       	push	r6
    114a:	7f 92       	push	r7
    114c:	8f 92       	push	r8
    114e:	9f 92       	push	r9
    1150:	af 92       	push	r10
    1152:	bf 92       	push	r11
    1154:	cf 92       	push	r12
    1156:	df 92       	push	r13
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	cd b7       	in	r28, 0x3d	; 61
    1166:	de b7       	in	r29, 0x3e	; 62
    1168:	ca 1b       	sub	r28, r26
    116a:	db 0b       	sbc	r29, r27
    116c:	0f b6       	in	r0, 0x3f	; 63
    116e:	f8 94       	cli
    1170:	de bf       	out	0x3e, r29	; 62
    1172:	0f be       	out	0x3f, r0	; 63
    1174:	cd bf       	out	0x3d, r28	; 61
    1176:	09 94       	ijmp

00001178 <__epilogue_restores__>:
    1178:	2a 88       	ldd	r2, Y+18	; 0x12
    117a:	39 88       	ldd	r3, Y+17	; 0x11
    117c:	48 88       	ldd	r4, Y+16	; 0x10
    117e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1180:	6e 84       	ldd	r6, Y+14	; 0x0e
    1182:	7d 84       	ldd	r7, Y+13	; 0x0d
    1184:	8c 84       	ldd	r8, Y+12	; 0x0c
    1186:	9b 84       	ldd	r9, Y+11	; 0x0b
    1188:	aa 84       	ldd	r10, Y+10	; 0x0a
    118a:	b9 84       	ldd	r11, Y+9	; 0x09
    118c:	c8 84       	ldd	r12, Y+8	; 0x08
    118e:	df 80       	ldd	r13, Y+7	; 0x07
    1190:	ee 80       	ldd	r14, Y+6	; 0x06
    1192:	fd 80       	ldd	r15, Y+5	; 0x05
    1194:	0c 81       	ldd	r16, Y+4	; 0x04
    1196:	1b 81       	ldd	r17, Y+3	; 0x03
    1198:	aa 81       	ldd	r26, Y+2	; 0x02
    119a:	b9 81       	ldd	r27, Y+1	; 0x01
    119c:	ce 0f       	add	r28, r30
    119e:	d1 1d       	adc	r29, r1
    11a0:	0f b6       	in	r0, 0x3f	; 63
    11a2:	f8 94       	cli
    11a4:	de bf       	out	0x3e, r29	; 62
    11a6:	0f be       	out	0x3f, r0	; 63
    11a8:	cd bf       	out	0x3d, r28	; 61
    11aa:	ed 01       	movw	r28, r26
    11ac:	08 95       	ret

000011ae <_exit>:
    11ae:	f8 94       	cli

000011b0 <__stop_program>:
    11b0:	ff cf       	rjmp	.-2      	; 0x11b0 <__stop_program>
